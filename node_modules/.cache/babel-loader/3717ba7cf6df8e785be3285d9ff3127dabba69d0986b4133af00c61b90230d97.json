{"ast":null,"code":"/* youtube-background v1.1.1 | https://github.com/stamat/youtube-background | MIT License */\n(() => {\n  // src/lib/buttons.js\n  function buttonOn(buttonObj) {\n    if (!buttonObj) return;\n    buttonObj.element.classList.add(buttonObj.stateClassName);\n    buttonObj.element.firstChild.classList.remove(buttonObj.stateChildClassNames[0]);\n    buttonObj.element.firstChild.classList.add(buttonObj.stateChildClassNames[1]);\n    buttonObj.element.setAttribute(\"aria-checked\", false);\n  }\n  function buttonOff(buttonObj) {\n    if (!buttonObj) return;\n    buttonObj.element.classList.remove(buttonObj.stateClassName);\n    buttonObj.element.firstChild.classList.add(buttonObj.stateChildClassNames[0]);\n    buttonObj.element.firstChild.classList.remove(buttonObj.stateChildClassNames[1]);\n    buttonObj.element.setAttribute(\"aria-checked\", true);\n  }\n  function generateActionButton(obj, props) {\n    const btn = document.createElement(\"button\");\n    btn.className = props.className;\n    btn.innerHTML = props.innerHtml;\n    btn.setAttribute(\"role\", \"switch\");\n    btn.firstChild.classList.add(props.stateChildClassNames[0]);\n    btn.setAttribute(\"aria-checked\", !props.initialState);\n    props.element = btn;\n    if (obj.params[props.condition_parameter] === props.initialState) {\n      buttonOn(props);\n    }\n    btn.addEventListener(\"click\", function (e) {\n      if (this.classList.contains(props.stateClassName)) {\n        buttonOff(props);\n        obj[props.actions[0]]();\n      } else {\n        buttonOn(props);\n        obj[props.actions[1]]();\n      }\n    });\n    obj.buttons[props.name] = {\n      element: btn,\n      button_properties: props\n    };\n    obj.controls_element.appendChild(btn);\n  }\n\n  // node_modules/book-of-spells/src/helpers.mjs\n  function stringToBoolean(str) {\n    if (/^\\s*(true|false)\\s*$/i.test(str)) return str === \"true\";\n  }\n  function stringToNumber(str) {\n    if (/^\\s*\\d+\\s*$/.test(str)) return parseInt(str);\n    if (/^\\s*[\\d.]+\\s*$/.test(str)) return parseFloat(str);\n  }\n  function stringToArray(str) {\n    if (!/^\\s*\\[.*\\]\\s*$/.test(str)) return;\n    try {\n      return JSON.parse(str);\n    } catch (e) {}\n  }\n  function stringToObject(str) {\n    if (!/^\\s*\\{.*\\}\\s*$/.test(str)) return;\n    try {\n      return JSON.parse(str);\n    } catch (e) {}\n  }\n  function stringToRegex(str) {\n    if (!/^\\s*\\/.*\\/g?i?\\s*$/.test(str)) return;\n    try {\n      return new RegExp(str);\n    } catch (e) {}\n  }\n  function stringToType(str) {\n    if (/^\\s*null\\s*$/.test(str)) return null;\n    const bool = stringToBoolean(str);\n    if (bool !== void 0) return bool;\n    return stringToNumber(str) || stringToArray(str) || stringToObject(str) || stringToRegex(str) || str;\n  }\n  function isArray(o) {\n    return Array.isArray(o);\n  }\n  function isString(o) {\n    return typeof o === \"string\";\n  }\n  function randomIntInclusive(min, max) {\n    if (min > max) [min, max] = [max, min];\n    if (min === max) return min;\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  function percentage(num, total) {\n    if (!num || !total || Number.isNaN(num) || Number.isNaN(total)) return 0;\n    return num / total * 100;\n  }\n  function parseResolutionString(res) {\n    const DEFAULT_RESOLUTION = 1.7777777778;\n    if (!res || !res.length || /16[\\:x\\-\\/]{1}9/i.test(res)) return DEFAULT_RESOLUTION;\n    const pts = res.split(/\\s?[\\:x\\-\\/]{1}\\s?/i);\n    if (pts.length < 2) return DEFAULT_RESOLUTION;\n    const w = parseInt(pts[0]);\n    const h = parseInt(pts[1]);\n    if (w === 0 || h === 0) return DEFAULT_RESOLUTION;\n    if (isNaN(w) || isNaN(h)) return DEFAULT_RESOLUTION;\n    return w / h;\n  }\n\n  // node_modules/book-of-spells/src/dom.mjs\n  function query(selector, from = document) {\n    if (selector instanceof Array || selector instanceof NodeList) return selector;\n    if (selector instanceof Element) return [selector];\n    if (from instanceof Element || from instanceof Document) return from.querySelectorAll(selector);\n    if (isString(from)) from = query(from);\n    if (!from instanceof Array && !from instanceof NodeList) return [];\n    const res = [];\n    for (const element of from) {\n      res.push(...element.querySelectorAll(selector));\n    }\n    return res;\n  }\n  function proportionalParentCoverResize(elements, ratio = 1, offset = 0) {\n    if (elements instanceof Element) elements = [elements];\n    if (typeof elements === \"string\") elements = query(elements);\n    for (const element of elements) {\n      const h = element.parentNode.offsetHeight + offset;\n      const w = element.parentNode.offsetWidth + offset;\n      if (ratio > w / h) {\n        element.style.width = h * ratio + \"px\";\n        element.style.height = h + \"px\";\n      } else {\n        element.style.width = w + \"px\";\n        element.style.height = w / ratio + \"px\";\n      }\n    }\n  }\n\n  // node_modules/book-of-spells/src/regex.mjs\n  var RE_YOUTUBE = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n  var RE_VIMEO = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n  var RE_VIDEO = /\\/([^\\/]+\\.(?:mp4|ogg|ogv|ogm|webm|avi))\\s*$/i;\n\n  // node_modules/book-of-spells/src/browser.mjs\n  function isUserAgentMobile(str) {\n    return /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(str) || /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(str);\n  }\n  function isMobile() {\n    if (\"maxTouchPoints\" in navigator) return navigator.maxTouchPoints > 0;\n    if (\"matchMedia\" in window) return !!matchMedia(\"(pointer:coarse)\").matches;\n    if (\"orientation\" in window) return true;\n    return isUserAgentMobile(navigator.userAgent);\n  }\n\n  // src/lib/super-video-background.js\n  var SuperVideoBackground = class {\n    constructor(elem, params, id, uid, type) {\n      if (!id) return;\n      this.is_mobile = isMobile();\n      this.type = type;\n      this.id = id;\n      this.element = elem;\n      this.playerElement = null;\n      this.uid = uid;\n      this.element.setAttribute(\"data-vbg-uid\", uid);\n      this.buttons = {};\n      this.isIntersecting = false;\n      this.playing = false;\n      this.muted = false;\n      this.currentState = \"notstarted\";\n      this.initialPlay = false;\n      this.initialVolume = false;\n      this.volume = 1;\n      this.params = {};\n      const DEFAULTS = {\n        \"pause\": false,\n        //deprecated\n        \"play-button\": false,\n        \"mute-button\": false,\n        \"autoplay\": true,\n        \"muted\": true,\n        \"loop\": true,\n        \"mobile\": true,\n        \"load-background\": false,\n        \"resolution\": \"16:9\",\n        \"inline-styles\": true,\n        \"fit-box\": false,\n        \"offset\": 100,\n        // since showinfo is deprecated and ignored after September 25, 2018. we add +100 to hide it in the overflow\n        \"start-at\": 0,\n        \"end-at\": 0,\n        \"poster\": null,\n        \"always-play\": false,\n        \"volume\": 1,\n        \"no-cookie\": true,\n        \"force-on-low-battery\": false,\n        \"lazyloading\": false\n      };\n      this.params = this.parseProperties(params, DEFAULTS, this.element, [\"data-ytbg-\", \"data-vbg-\"]);\n      if (this.params.pause) {\n        this.params[\"play-button\"] = this.params.pause;\n      }\n      this.params.resolution_mod = parseResolutionString(this.params.resolution);\n      this.playing = this.params.autoplay;\n      this.muted = this.params.muted;\n      this.volume = this.params.volume;\n      this.currentTime = this.params[\"start-at\"] || 0;\n      this.duration = this.params[\"end-at\"] || 0;\n      this.percentComplete = 0;\n      if (this.params[\"start-at\"]) this.percentComplete = this.timeToPercentage(this.params[\"start-at\"]);\n      this.buildWrapperHTML();\n      if (this.is_mobile && !this.params.mobile) return;\n      if (this.params[\"play-button\"]) {\n        generateActionButton(this, {\n          name: \"playing\",\n          className: \"play-toggle\",\n          innerHtml: '<i class=\"fa\"></i>',\n          initialState: !this.playing,\n          stateClassName: \"paused\",\n          condition_parameter: \"autoplay\",\n          stateChildClassNames: [\"fa-pause-circle\", \"fa-play-circle\"],\n          actions: [\"play\", \"pause\"]\n        });\n      }\n      if (this.params[\"mute-button\"]) {\n        generateActionButton(this, {\n          name: \"muted\",\n          className: \"mute-toggle\",\n          innerHtml: '<i class=\"fa\"></i>',\n          initialState: this.muted,\n          stateClassName: \"muted\",\n          condition_parameter: \"muted\",\n          stateChildClassNames: [\"fa-volume-up\", \"fa-volume-mute\"],\n          actions: [\"unmute\", \"mute\"]\n        });\n      }\n    }\n    timeToPercentage(time) {\n      if (time <= this.params[\"start-at\"]) return 0;\n      if (time >= this.duration) return 100;\n      if (time <= 0) return 0;\n      time -= this.params[\"start-at\"];\n      const duration = this.duration - this.params[\"start-at\"];\n      return percentage(time, duration);\n    }\n    percentageToTime(percentage2) {\n      if (!this.duration) return 0;\n      if (percentage2 > 100) return this.duration;\n      if (percentage2 < 0) return 0;\n      const duration = this.duration - this.params[\"start-at\"];\n      let time = percentage2 * duration / 100;\n      if (this.params[\"start-at\"]) time += this.params[\"start-at\"];\n      return time;\n    }\n    resize(element) {\n      if (!this.params[\"fit-box\"]) proportionalParentCoverResize(element || this.playerElement, this.params.resolution_mod, this.params.offset);\n      this.dispatchEvent(\"video-background-resize\");\n    }\n    stylePlayerElement(element) {\n      if (!element) return;\n      if (this.params[\"inline-styles\"]) {\n        element.style.top = \"50%\";\n        element.style.left = \"50%\";\n        element.style.transform = \"translateX(-50%) translateY(-50%)\";\n        element.style.position = \"absolute\";\n        element.style.opacity = 0;\n      }\n      if (this.params[\"fit-box\"]) {\n        element.style.width = \"100%\";\n        element.style.height = \"100%\";\n      }\n    }\n    buildWrapperHTML() {\n      const parent = this.element.parentNode;\n      this.element.classList.add(\"youtube-background\", \"video-background\");\n      const wrapper_styles = {\n        \"height\": \"100%\",\n        \"width\": \"100%\",\n        \"z-index\": \"0\",\n        \"position\": \"absolute\",\n        \"overflow\": \"hidden\",\n        \"top\": 0,\n        // added by @insad\n        \"left\": 0,\n        \"bottom\": 0,\n        \"right\": 0\n      };\n      if (!this.params[\"mute-button\"]) {\n        wrapper_styles[\"pointer-events\"] = \"none\";\n      }\n      if (this.params[\"load-background\"] || this.params[\"poster\"]) {\n        this.loadBackground(this.id);\n        if (this.params[\"poster\"]) wrapper_styles[\"background-image\"] = this.params[\"poster\"];\n        wrapper_styles[\"background-size\"] = \"cover\";\n        wrapper_styles[\"background-repeat\"] = \"no-repeat\";\n        wrapper_styles[\"background-position\"] = \"center\";\n      }\n      if (this.params[\"inline-styles\"]) {\n        for (let property in wrapper_styles) {\n          this.element.style[property] = wrapper_styles[property];\n        }\n        if (![\"absolute\", \"fixed\", \"relative\", \"sticky\"].indexOf(parent.style.position)) {\n          parent.style.position = \"relative\";\n        }\n      }\n      if (this.params[\"play-button\"] || this.params[\"mute-button\"]) {\n        const controls = document.createElement(\"div\");\n        controls.className = \"video-background-controls\";\n        controls.style.position = \"absolute\";\n        controls.style.top = \"10px\";\n        controls.style.right = \"10px\";\n        controls.style[\"z-index\"] = 2;\n        this.controls_element = controls;\n        parent.appendChild(controls);\n      }\n      return this.element;\n    }\n    loadBackground(id) {\n      if (!this.params[\"load-background\"]) ;\n      if (!id) return;\n      if (this.type === \"youtube\") this.element.style[\"background-image\"] = `url(https://img.youtube.com/vi/${id}/hqdefault.jpg)`;\n      if (this.type === \"vimeo\") this.element.style[\"background-image\"] = `url(https://vumbnail.com/${id}.jpg)`;\n    }\n    destroy() {\n      this.playerElement.remove();\n      this.element.classList.remove(\"youtube-background\", \"video-background\");\n      this.element.removeAttribute(\"data-vbg-uid\");\n      this.element.style = \"\";\n      if (this.params[\"play-button\"] || this.params[\"mute-button\"]) {\n        this.controls_element.remove();\n      }\n      if (this.timeUpdateTimer) clearInterval(this.timeUpdateTimer);\n      this.dispatchEvent(\"video-background-destroyed\");\n    }\n    setDuration(duration) {\n      if (this.duration === duration) return;\n      if (this.params[\"end-at\"]) {\n        if (duration > this.params[\"end-at\"]) {\n          this.duration = this.params[\"end-at\"];\n          return;\n        }\n        if (duration < this.params[\"end-at\"]) {\n          this.duration = duration;\n          return;\n        }\n      } else {\n        this.duration = duration;\n        return;\n      }\n      if (duration <= 0) this.duration = this.params[\"end-at\"];\n    }\n    setStartAt(startAt) {\n      this.params[\"start-at\"] = startAt;\n    }\n    setEndAt(endAt) {\n      this.params[\"end-at\"] = endAt;\n      if (this.duration > endAt) this.duration = endAt;\n      if (this.currentTime > endAt) this.onVideoEnded();\n    }\n    dispatchEvent(name) {\n      this.element.dispatchEvent(new CustomEvent(name, {\n        bubbles: true,\n        detail: this\n      }));\n    }\n    mobileLowBatteryAutoplayHack() {\n      if (!this.params[\"force-on-low-battery\"]) return;\n      if (!this.is_mobile && this.params.mobile) return;\n      document.addEventListener(\"touchstart\", () => {\n        if (!this.initialPlay && this.params.autoplay && this.params.muted) {\n          this.softPlay();\n          if (!this.isIntersecting && !this.params[\"always-play\"]) {\n            this.softPause();\n          }\n        }\n      }, {\n        once: true\n      });\n    }\n    parseProperties(params, defaults, element, attr_prefix) {\n      let res_params = {};\n      if (!params) {\n        res_params = defaults;\n      } else {\n        for (let k in defaults) {\n          res_params[k] = !params.hasOwnProperty(k) ? defaults[k] : params[k];\n        }\n      }\n      if (!element) return res_params;\n      for (let k in res_params) {\n        let data;\n        if (isArray(attr_prefix)) {\n          for (let i = 0; i < attr_prefix.length; i++) {\n            const temp_data = element.getAttribute(attr_prefix[i] + k);\n            if (temp_data) {\n              data = temp_data;\n              break;\n            }\n          }\n        } else {\n          data = element.getAttribute(attr_prefix + k);\n        }\n        if (data !== void 0 && data !== null) {\n          res_params[k] = stringToType(data);\n        }\n      }\n      return res_params;\n    }\n  };\n\n  // src/lib/youtube-background.js\n  var YoutubeBackground = class extends SuperVideoBackground {\n    constructor(elem, params, id, uid) {\n      super(elem, params, id, uid, \"youtube\");\n      if (!id) return;\n      if (this.is_mobile && !this.params.mobile) return;\n      this.injectScript();\n      this.player = null;\n      this.injectPlayer();\n      this.STATES = {\n        \"-1\": \"notstarted\",\n        \"0\": \"ended\",\n        \"1\": \"playing\",\n        \"2\": \"paused\",\n        \"3\": \"buffering\",\n        \"5\": \"cued\"\n      };\n      this.timeUpdateTimer = null;\n      this.timeUpdateInterval = 250;\n      this.initYTPlayer();\n    }\n    startTimeUpdateTimer() {\n      if (this.timeUpdateTimer) return;\n      this.timeUpdateTimer = setInterval(this.onVideoTimeUpdate.bind(this), this.timeUpdateInterval);\n    }\n    stopTimeUpdateTimer() {\n      clearInterval(this.timeUpdateTimer);\n      this.timeUpdateTimer = null;\n    }\n    convertState(state) {\n      return this.STATES[state];\n    }\n    initYTPlayer() {\n      if (!window.hasOwnProperty(\"YT\") || this.player !== null) return;\n      this.player = new YT.Player(this.uid, {\n        events: {\n          \"onReady\": this.onVideoPlayerReady.bind(this),\n          \"onStateChange\": this.onVideoStateChange.bind(this)\n        }\n      });\n      if (this.volume !== 1 && !this.muted) this.setVolume(this.volume);\n    }\n    injectScript() {\n      if (window.hasOwnProperty(\"YT\") || document.querySelector('script[src=\"https://www.youtube.com/player_api\"]')) return;\n      const tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/player_api\";\n      const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n    generatePlayerElement() {\n      const playerElement = document.createElement(\"iframe\");\n      playerElement.setAttribute(\"frameborder\", 0);\n      playerElement.setAttribute(\"allow\", \"autoplay; mute\");\n      if (this.params[\"lazyloading\"]) playerElement.setAttribute(\"loading\", \"lazy\");\n      return playerElement;\n    }\n    generateSrcURL(id) {\n      let site = \"https://www.youtube.com/embed/\";\n      if (this.params[\"no-cookie\"]) {\n        site = \"https://www.youtube-nocookie.com/embed/\";\n      }\n      let src = `${site}${id}?&enablejsapi=1&disablekb=1&controls=0&rel=0&iv_load_policy=3&cc_load_policy=0&playsinline=1&showinfo=0&modestbranding=1&fs=0`;\n      if (this.params.muted) {\n        src += \"&mute=1\";\n      }\n      if (this.params.autoplay && (this.params[\"always-play\"] || this.isIntersecting)) {\n        src += \"&autoplay=1\";\n      }\n      if (this.params.loop) {\n        src += \"&loop=1\";\n      }\n      return src;\n    }\n    injectPlayer() {\n      this.playerElement = this.generatePlayerElement();\n      this.src = this.generateSrcURL(this.id);\n      this.playerElement.src = this.src;\n      this.playerElement.id = this.uid;\n      this.stylePlayerElement(this.playerElement);\n      this.element.appendChild(this.playerElement);\n      this.resize(this.playerElement);\n    }\n    /* ===== API ===== */\n    setSource(url) {\n      const pts = url.match(RE_YOUTUBE);\n      if (!pts || !pts.length) return;\n      this.id = pts[1];\n      this.src = this.generateSrcURL(this.id);\n      this.playerElement.src = this.src;\n      if (this.element.hasAttribute(\"data-vbg\")) this.element.setAttribute(\"data-vbg\", this.src);\n      if (this.element.hasAttribute(\"data-ytbg\")) this.element.setAttribute(\"data-ytbg\", this.src);\n      this.loadBackground(this.id);\n    }\n    onVideoTimeUpdate() {\n      const ctime = this.player.getCurrentTime();\n      if (ctime === this.currentTime) return;\n      this.currentTime = ctime;\n      this.percentComplete = this.timeToPercentage(this.currentTime);\n      if (this.duration && this.currentTime >= this.duration) {\n        this.currentState = \"ended\";\n        this.dispatchEvent(\"video-background-state-change\");\n        this.onVideoEnded();\n      }\n      this.dispatchEvent(\"video-background-time-update\");\n    }\n    onVideoPlayerReady() {\n      this.mobileLowBatteryAutoplayHack();\n      if (this.params.autoplay && (this.params[\"always-play\"] || this.isIntersecting)) {\n        if (this.params[\"start-at\"]) this.seekTo(this.params[\"start-at\"]);\n        this.player.playVideo();\n      }\n      this.setDuration(this.player.getDuration());\n      this.dispatchEvent(\"video-background-ready\");\n    }\n    onVideoStateChange(event) {\n      this.currentState = this.convertState(event.data);\n      if (this.currentState === \"ended\") {\n        this.onVideoEnded();\n      }\n      if (this.currentState === \"notstarted\" && this.params.autoplay) {\n        this.seekTo(this.params[\"start-at\"]);\n        this.player.playVideo();\n      }\n      if (this.currentState === \"playing\") {\n        if (!this.initialPlay) {\n          this.initialPlay = true;\n          this.playerElement.style.opacity = 1;\n        }\n        if (!this.duration) {\n          this.setDuration(this.player.getDuration());\n        }\n        this.dispatchEvent(\"video-background-play\");\n        this.startTimeUpdateTimer();\n      } else {\n        this.dispatchEvent(\"video-background-pause\");\n        this.stopTimeUpdateTimer();\n      }\n      this.dispatchEvent(\"video-background-state-change\");\n    }\n    onVideoEnded() {\n      this.dispatchEvent(\"video-background-ended\");\n      if (!this.params.loop) return this.player.pause();\n      this.seekTo(this.params[\"start-at\"]);\n      this.player.playVideo();\n    }\n    seek(percentage2) {\n      this.seekTo(this.percentageToTime(percentage2), true);\n    }\n    seekTo(seconds, allowSeekAhead = true) {\n      this.player.seekTo(seconds, allowSeekAhead);\n    }\n    softPause() {\n      if (!this.playing || !this.player) return;\n      this.player.pauseVideo();\n    }\n    softPlay() {\n      if (!this.playing || !this.player) return;\n      this.player.playVideo();\n    }\n    play() {\n      if (!this.player) return;\n      this.playing = true;\n      if (this.params[\"start-at\"] && this.player.getCurrentTime() < this.params[\"start-at\"]) {\n        this.seekTo(this.params[\"start-at\"]);\n      }\n      this.player.playVideo();\n    }\n    pause() {\n      this.playing = false;\n      this.player.pauseVideo();\n    }\n    unmute() {\n      if (!this.player) return;\n      this.muted = false;\n      if (!this.initialVolume) {\n        this.initialVolume = true;\n        this.setVolume(this.params.volume);\n      }\n      this.player.unMute();\n      this.dispatchEvent(\"video-background-unmute\");\n    }\n    mute() {\n      if (!this.player) return;\n      this.muted = true;\n      this.player.mute();\n      this.dispatchEvent(\"video-background-mute\");\n    }\n    getVolume() {\n      if (!this.player) return;\n      return this.player.getVolume() / 100;\n    }\n    setVolume(volume) {\n      if (!this.player) return;\n      this.volume = volume;\n      this.player.setVolume(volume * 100);\n      this.dispatchEvent(\"video-background-volume-change\");\n    }\n  };\n\n  // src/lib/vimeo-background.js\n  var VimeoBackground = class extends SuperVideoBackground {\n    constructor(elem, params, id, uid) {\n      super(elem, params, id, uid, \"vimeo\");\n      if (!id) return;\n      if (this.is_mobile && !this.params.mobile) return;\n      this.injectScript();\n      this.player = null;\n      this.injectPlayer();\n      this.initVimeoPlayer();\n    }\n    injectScript() {\n      if (window.hasOwnProperty(\"Vimeo\") || document.querySelector('script[src=\"https://player.vimeo.com/api/player.js\"]')) return;\n      const tag = document.createElement(\"script\");\n      if (window.hasOwnProperty(\"onVimeoIframeAPIReady\") && typeof window.onVimeoIframeAPIReady === \"function\") tag.addEventListener(\"load\", () => {\n        window.onVimeoIframeAPIReady();\n      });\n      tag.src = \"https://player.vimeo.com/api/player.js\";\n      const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n    initVimeoPlayer() {\n      if (!window.hasOwnProperty(\"Vimeo\") || this.player !== null) return;\n      this.player = new Vimeo.Player(this.playerElement);\n      this.player.on(\"loaded\", this.onVideoPlayerReady.bind(this));\n      this.player.on(\"ended\", this.onVideoEnded.bind(this));\n      this.player.on(\"play\", this.onVideoPlay.bind(this));\n      this.player.on(\"pause\", this.onVideoPause.bind(this));\n      this.player.on(\"bufferstart\", this.onVideoBuffering.bind(this));\n      this.player.on(\"timeupdate\", this.onVideoTimeUpdate.bind(this));\n      if (this.volume !== 1 && !this.muted) this.setVolume(this.volume);\n    }\n    generatePlayerElement() {\n      const playerElement = document.createElement(\"iframe\");\n      playerElement.setAttribute(\"frameborder\", 0);\n      playerElement.setAttribute(\"allow\", \"autoplay; mute\");\n      if (this.params[\"lazyloading\"]) playerElement.setAttribute(\"loading\", \"lazy\");\n      return playerElement;\n    }\n    generateSrcURL(id) {\n      let src = \"https://player.vimeo.com/video/\" + id + \"?background=1&controls=0\";\n      if (this.params.muted) {\n        src += \"&muted=1\";\n      }\n      if (this.params.autoplay && (this.params[\"always-play\"] || this.isIntersecting)) {\n        src += \"&autoplay=1\";\n      }\n      if (this.params.loop) {\n        src += \"&loop=1&autopause=0\";\n      }\n      if (this.params[\"no-cookie\"]) {\n        src += \"&dnt=1\";\n      }\n      if (this.params[\"start-at\"]) {\n        src += \"#t=\" + this.params[\"start-at\"] + \"s\";\n      }\n      return src;\n    }\n    injectPlayer() {\n      this.playerElement = this.generatePlayerElement();\n      this.src = this.generateSrcURL(this.id);\n      this.playerElement.src = this.src;\n      this.playerElement.id = this.uid;\n      this.stylePlayerElement(this.playerElement);\n      this.element.appendChild(this.playerElement);\n      this.resize(this.playerElement);\n    }\n    updateState(state) {\n      this.currentState = state;\n      this.dispatchEvent(\"video-background-state-change\");\n    }\n    /* ===== API ===== */\n    setSource(url) {\n      const pts = url.match(RE_VIMEO);\n      if (!pts || !pts.length) return;\n      this.id = pts[1];\n      this.src = this.generateSrcURL(this.id);\n      this.playerElement.src = this.src;\n      if (this.element.hasAttribute(\"data-vbg\")) this.element.setAttribute(\"data-vbg\", this.src);\n      if (this.element.hasAttribute(\"data-ytbg\")) this.element.setAttribute(\"data-ytbg\", this.src);\n      this.loadBackground(this.id);\n    }\n    onVideoPlayerReady() {\n      this.mobileLowBatteryAutoplayHack();\n      if (this.params[\"start-at\"]) this.seekTo(this.params[\"start-at\"]);\n      if (this.params.autoplay && (this.params[\"always-play\"] || this.isIntersecting)) {\n        this.player.play();\n      }\n      this.player.getDuration().then(duration => {\n        this.setDuration(duration);\n      });\n      this.dispatchEvent(\"video-background-ready\");\n    }\n    onVideoEnded() {\n      this.updateState(\"ended\");\n      this.dispatchEvent(\"video-background-ended\");\n      if (!this.params.loop) return this.pause();\n      this.seekTo(this.params[\"start-at\"]);\n      this.updateState(\"playing\");\n      this.dispatchEvent(\"video-background-play\");\n    }\n    onVideoTimeUpdate(event) {\n      this.currentTime = event.seconds;\n      this.percentComplete = this.timeToPercentage(event.seconds);\n      this.dispatchEvent(\"video-background-time-update\");\n      if (this.duration && event.seconds >= this.duration) {\n        this.onVideoEnded();\n      }\n    }\n    onVideoBuffering() {\n      this.updateState(\"buffering\");\n    }\n    onVideoPlay(event) {\n      if (!this.initialPlay) {\n        this.initialPlay = true;\n        this.playerElement.style.opacity = 1;\n      }\n      this.setDuration(event.duration);\n      const seconds = event.seconds;\n      if (self.params[\"start-at\"] && seconds < self.params[\"start-at\"]) {\n        self.seekTo(self.params[\"start-at\"]);\n      }\n      if (self.duration && seconds >= self.duration) {\n        self.seekTo(self.params[\"start-at\"]);\n      }\n      this.updateState(\"playing\");\n      this.dispatchEvent(\"video-background-play\");\n    }\n    onVideoPause() {\n      this.updateState(\"paused\");\n      this.dispatchEvent(\"video-background-pause\");\n    }\n    seek(percentage2) {\n      this.seekTo(this.percentageToTime(percentage2));\n    }\n    seekTo(time) {\n      this.player.setCurrentTime(time);\n    }\n    softPause() {\n      if (!this.playing || !this.player) return;\n      this.player.pause();\n    }\n    softPlay() {\n      if (!this.playing || !this.player) return;\n      this.player.play();\n    }\n    play() {\n      if (!this.player) return;\n      this.playing = true;\n      this.player.play();\n    }\n    pause() {\n      if (!this.player) return;\n      this.playing = false;\n      this.player.pause();\n    }\n    unmute() {\n      if (!this.player) return;\n      this.muted = false;\n      if (!this.initialVolume) {\n        this.initialVolume = true;\n        this.setVolume(this.params.volume);\n      }\n      this.player.setMuted(false);\n      this.dispatchEvent(\"video-background-unmute\");\n    }\n    mute() {\n      if (!this.player) return;\n      this.muted = true;\n      this.player.setMuted(true);\n      this.dispatchEvent(\"video-background-mute\");\n    }\n    getVolume() {\n      if (!this.player) return;\n      return this.player.getVolume();\n    }\n    setVolume(volume) {\n      if (!this.player) return;\n      this.volume = volume;\n      this.player.setVolume(volume);\n      this.dispatchEvent(\"video-background-volume-change\");\n    }\n  };\n\n  // src/lib/video-background.js\n  var VideoBackground = class extends SuperVideoBackground {\n    constructor(elem, params, vid_data, uid) {\n      super(elem, params, vid_data.link, uid, \"video\");\n      if (!vid_data || !vid_data.link) return;\n      if (this.is_mobile && !this.params.mobile) return;\n      this.src = vid_data.link;\n      this.ext = /(?:\\.([^.]+))?$/.exec(vid_data.id)[1];\n      this.uid = uid;\n      this.element.setAttribute(\"data-vbg-uid\", uid);\n      this.player = null;\n      this.buttons = {};\n      this.MIME_MAP = {\n        \"ogv\": \"video/ogg\",\n        \"ogm\": \"video/ogg\",\n        \"ogg\": \"video/ogg\",\n        \"avi\": \"video/avi\",\n        \"mp4\": \"video/mp4\",\n        \"webm\": \"video/webm\"\n      };\n      this.mime = this.MIME_MAP[this.ext.toLowerCase()];\n      this.injectPlayer();\n      this.mobileLowBatteryAutoplayHack();\n      this.dispatchEvent(\"video-background-ready\");\n    }\n    generatePlayerElement() {\n      const playerElement = document.createElement(\"video\");\n      playerElement.setAttribute(\"playsinline\", \"\");\n      if (this.params.loop) playerElement.setAttribute(\"loop\", \"\");\n      if (this.params.autoplay && (this.params[\"always-play\"] || this.isIntersecting)) playerElement.setAttribute(\"autoplay\", \"\");\n      if (this.muted) playerElement.setAttribute(\"muted\", \"\");\n      if (this.params[\"lazyloading\"]) playerElement.setAttribute(\"loading\", \"lazy\");\n      return playerElement;\n    }\n    injectPlayer() {\n      this.player = this.generatePlayerElement();\n      this.playerElement = this.player;\n      if (this.volume !== 1 && !this.muted) this.setVolume(this.volume);\n      this.playerElement.setAttribute(\"id\", this.uid);\n      this.stylePlayerElement(this.playerElement);\n      this.player.addEventListener(\"loadedmetadata\", this.onVideoLoadedMetadata.bind(this));\n      this.player.addEventListener(\"durationchange\", this.onVideoLoadedMetadata.bind(this));\n      this.player.addEventListener(\"canplay\", this.onVideoCanPlay.bind(this));\n      this.player.addEventListener(\"timeupdate\", this.onVideoTimeUpdate.bind(this));\n      this.player.addEventListener(\"play\", this.onVideoPlay.bind(this));\n      this.player.addEventListener(\"pause\", this.onVideoPause.bind(this));\n      this.player.addEventListener(\"waiting\", this.onVideoBuffering.bind(this));\n      this.player.addEventListener(\"ended\", this.onVideoEnded.bind(this));\n      this.element.appendChild(this.playerElement);\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", this.src);\n      source.setAttribute(\"type\", this.mime);\n      this.playerElement.appendChild(source);\n      this.resize(this.playerElement);\n    }\n    updateState(state) {\n      this.currentState = state;\n      this.dispatchEvent(\"video-background-state-change\");\n    }\n    /* ===== API ===== */\n    setSource(url) {\n      const pts = url.match(RE_VIDEO);\n      if (!pts || !pts.length) return;\n      this.id = pts[1];\n      this.ext = /(?:\\.([^.]+))?$/.exec(this.id)[1];\n      this.mime = this.MIME_MAP[this.ext.toLowerCase()];\n      this.playerElement.innerHTML = \"\";\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", url);\n      source.setAttribute(\"type\", this.mime);\n      this.playerElement.appendChild(source);\n      this.src = url;\n      if (this.element.hasAttribute(\"data-vbg\")) this.element.setAttribute(\"data-vbg\", this.src);\n      if (this.element.hasAttribute(\"data-ytbg\")) this.element.setAttribute(\"data-ytbg\", this.src);\n    }\n    onVideoLoadedMetadata() {\n      this.setDuration(this.player.duration);\n    }\n    onVideoCanPlay() {\n      this.setDuration(this.player.duration);\n      if (this.params[\"start-at\"] && this.params.autoplay) {\n        this.seekTo(this.params[\"start-at\"]);\n      }\n    }\n    onVideoTimeUpdate() {\n      this.currentTime = this.player.currentTime;\n      this.percentComplete = this.timeToPercentage(this.player.currentTime);\n      this.dispatchEvent(\"video-background-time-update\");\n      if (this.currentTime >= this.duration) {\n        this.onVideoEnded();\n      }\n    }\n    onVideoPlay() {\n      if (!this.initialPlay) {\n        this.initialPlay = true;\n        this.playerElement.style.opacity = 1;\n      }\n      this.updateState(\"playing\");\n      this.dispatchEvent(\"video-background-play\");\n    }\n    onVideoPause() {\n      this.updateState(\"paused\");\n      this.dispatchEvent(\"video-background-pause\");\n    }\n    onVideoEnded() {\n      this.updateState(\"ended\");\n      this.dispatchEvent(\"video-background-ended\");\n      if (!this.params.loop) return this.pause();\n      this.seekTo(this.params[\"start-at\"]);\n      this.onVideoPlay();\n    }\n    onVideoBuffering() {\n      this.updateState(\"buffering\");\n    }\n    seek(percentage2) {\n      this.seekTo(this.percentageToTime(percentage2));\n    }\n    seekTo(seconds) {\n      if (this.player.hasOwnProperty(\"fastSeek\")) {\n        this.player.fastSeek(seconds);\n        return;\n      }\n      this.player.currentTime = seconds;\n    }\n    softPause() {\n      if (!this.playing || !this.player) return;\n      this.player.pause();\n    }\n    softPlay() {\n      if (!this.playing || !this.player) return;\n      this.player.play();\n    }\n    play() {\n      if (!this.player) return;\n      const seconds = this.player.currentTime;\n      if (this.params[\"start-at\"] && seconds <= this.params[\"start-at\"]) {\n        this.seekTo(this.params[\"start-at\"]);\n      }\n      if (this.duration && seconds >= this.duration) {\n        this.seekTo(this.params[\"start-at\"]);\n      }\n      this.playing = true;\n      this.player.play();\n    }\n    pause() {\n      if (!this.player) return;\n      this.playing = false;\n      this.player.pause();\n    }\n    unmute() {\n      if (!this.player) return;\n      this.muted = false;\n      this.player.muted = false;\n      if (!this.initialVolume) {\n        this.initialVolume = true;\n        this.setVolume(this.params.volume);\n      }\n      this.dispatchEvent(\"video-background-unmute\");\n    }\n    mute() {\n      if (!this.player) return;\n      this.muted = true;\n      this.player.muted = true;\n      this.dispatchEvent(\"video-background-mute\");\n    }\n    getVolume() {\n      if (!this.player) return;\n      return this.player.volume;\n    }\n    setVolume(volume) {\n      if (!this.player) return;\n      this.volume = volume;\n      this.player.volume = volume;\n      this.dispatchEvent(\"video-background-volume-change\");\n    }\n  };\n\n  // src/video-backgrounds.js\n  var VideoBackgrounds = class {\n    constructor(selector, params) {\n      this.elements = selector;\n      if (this.elements instanceof Element) this.elements = [this.elements];\n      if (typeof this.elements === \"string\") this.elements = document.querySelectorAll(selector);\n      this.index = {};\n      const self2 = this;\n      this.intersectionObserver = null;\n      if (\"IntersectionObserver\" in window) {\n        this.intersectionObserver = new IntersectionObserver(function (entries) {\n          entries.forEach(function (entry) {\n            const uid = entry.target.getAttribute(\"data-vbg-uid\");\n            if (uid && self2.index.hasOwnProperty(uid) && entry.isIntersecting) {\n              self2.index[uid].isIntersecting = true;\n              try {\n                if (self2.index[uid].player && self2.index[uid].params.autoplay) self2.index[uid].softPlay();\n              } catch (e) {}\n            } else {\n              self2.index[uid].isIntersecting = false;\n              try {\n                if (self2.index[uid].player) self2.index[uid].softPause();\n              } catch (e) {}\n            }\n          });\n        });\n      }\n      this.resizeObserver = null;\n      if (\"ResizeObserver\" in window) {\n        this.resizeObserver = new ResizeObserver(function (entries) {\n          entries.forEach(function (entry) {\n            const uid = entry.target.getAttribute(\"data-vbg-uid\");\n            if (uid && self2.index.hasOwnProperty(uid)) {\n              window.requestAnimationFrame(() => self2.index[uid].resize());\n            }\n          });\n        });\n      } else {\n        window.addEventListener(\"resize\", function () {\n          for (let k in self2.index) {\n            window.requestAnimationFrame(() => self2.index[k].resize(self2.index[k].playerElement));\n          }\n        });\n      }\n      this.initPlayers();\n      if (!this.elements || !this.elements.length) return;\n      for (let i = 0; i < this.elements.length; i++) {\n        const element = this.elements[i];\n        this.add(element, params);\n      }\n    }\n    add(element, params) {\n      if (!element) return;\n      if (element.hasAttribute(\"data-vbg-uid\")) return;\n      if (!this.intersectionObserver) {\n        if (!params) params = {};\n        params[\"always-play\"] = true;\n      }\n      const link = element.getAttribute(\"data-youtube\") || element.getAttribute(\"data-vbg\");\n      const vid_data = this.getVidID(link);\n      if (!vid_data) return;\n      const uid = this.generateUID(vid_data.id);\n      if (!uid) return;\n      switch (vid_data.type) {\n        case \"YOUTUBE\":\n          const yb = new YoutubeBackground(element, params, vid_data.id, uid);\n          this.index[uid] = yb;\n          break;\n        case \"VIMEO\":\n          const vm = new VimeoBackground(element, params, vid_data.id, uid);\n          this.index[uid] = vm;\n          break;\n        case \"VIDEO\":\n          const vid = new VideoBackground(element, params, vid_data, uid);\n          this.index[uid] = vid;\n          break;\n      }\n      if (this.resizeObserver) {\n        this.resizeObserver.observe(element);\n      }\n      if (!this.index[uid].params[\"always-play\"] && this.intersectionObserver) {\n        this.intersectionObserver.observe(element);\n      }\n    }\n    destroy(element) {\n      const uid = element.uid || element.getAttribute(\"data-vbg-uid\");\n      if (uid && this.index.hasOwnProperty(uid)) {\n        if (!this.index[uid].params[\"always-play\"] && this.intersectionObserver) this.intersectionObserver.unobserve(element);\n        if (this.resizeObserver) this.resizeObserver.unobserve(element);\n        this.index[uid].destroy();\n        delete this.index[uid];\n      }\n    }\n    destroyAll() {\n      for (let k in this.index) {\n        this.destroy(this.index[k].playerElement);\n      }\n    }\n    getVidID(link) {\n      if (link === void 0 && link === null) return;\n      this.re = {};\n      this.re.YOUTUBE = RE_YOUTUBE;\n      this.re.VIMEO = RE_VIMEO;\n      this.re.VIDEO = RE_VIDEO;\n      for (let k in this.re) {\n        const pts = link.match(this.re[k]);\n        if (pts && pts.length) {\n          this.re[k].lastIndex = 0;\n          return {\n            id: pts[1],\n            type: k,\n            regex_pts: pts,\n            link\n          };\n        }\n      }\n      return;\n    }\n    generateUID(pref) {\n      pref = pref.replace(/[^a-zA-Z0-9\\-_]/g, \"-\");\n      pref = pref.replace(/-{2,}/g, \"-\");\n      pref = pref.replace(/^-+/, \"\").replace(/-+$/, \"\");\n      pref = \"vbg-\" + pref;\n      let uid = pref + \"-\" + randomIntInclusive(0, 9999);\n      while (this.index.hasOwnProperty(uid)) {\n        uid = pref + \"-\" + randomIntInclusive(0, 9999);\n      }\n      return uid;\n    }\n    get(element) {\n      const uid = typeof element === \"string\" ? element : element.getAttribute(\"data-vbg-uid\");\n      if (uid && this.index.hasOwnProperty(uid)) return this.index[uid];\n    }\n    pauseAll() {\n      for (let k in this.index) {\n        this.index[k].pause();\n      }\n    }\n    playAll() {\n      for (let k in this.index) {\n        this.index[k].play();\n      }\n    }\n    muteAll() {\n      for (let k in this.index) {\n        this.index[k].mute();\n      }\n    }\n    unmuteAll() {\n      for (let k in this.index) {\n        this.index[k].unmute();\n      }\n    }\n    setVolumeAll(volume) {\n      for (let k in this.index) {\n        this.index[k].setVolume(volume);\n      }\n    }\n    initPlayers(callback) {\n      const self2 = this;\n      window.onYouTubeIframeAPIReady = function () {\n        for (let k in self2.index) {\n          if (self2.index[k] instanceof YoutubeBackground) {\n            self2.index[k].initYTPlayer();\n          }\n        }\n        if (callback) {\n          setTimeout(callback, 100);\n        }\n      };\n      if (window.hasOwnProperty(\"YT\") && window.YT.loaded) {\n        window.onYouTubeIframeAPIReady();\n      }\n      window.onVimeoIframeAPIReady = function () {\n        for (let k in self2.index) {\n          if (self2.index[k] instanceof VimeoBackground) {\n            self2.index[k].initVimeoPlayer();\n          }\n        }\n        if (callback) {\n          setTimeout(callback, 100);\n        }\n      };\n      if (window.hasOwnProperty(\"Vimeo\") && window.Vimeo.hasOwnProperty(\"Player\")) {\n        window.onVimeoIframeAPIReady();\n      }\n    }\n  };\n\n  // src/main.js\n  if (typeof jQuery == \"function\") {\n    (function ($) {\n      $.fn.youtube_background = function (params) {\n        const $this = $(this);\n        if (window.hasOwnProperty(\"VIDEO_BACKGROUNDS\")) {\n          window.VIDEO_BACKGROUNDS.add($this, params);\n          return $this;\n        }\n        window.VIDEO_BACKGROUNDS = new VideoBackgrounds(this, params);\n        return $this;\n      };\n    })(jQuery);\n  }\n  window.VideoBackgrounds = VideoBackgrounds;\n})();","map":{"version":3,"names":["buttonOn","buttonObj","element","classList","add","stateClassName","firstChild","remove","stateChildClassNames","setAttribute","buttonOff","generateActionButton","obj","props","btn","document","createElement","className","innerHTML","innerHtml","initialState","params","condition_parameter","addEventListener","e","contains","actions","buttons","name","button_properties","controls_element","appendChild","stringToBoolean","str","test","stringToNumber","parseInt","parseFloat","stringToArray","JSON","parse","stringToObject","stringToRegex","RegExp","stringToType","bool","isArray","o","Array","isString","randomIntInclusive","min","max","Math","ceil","floor","random","percentage","num","total","Number","isNaN","parseResolutionString","res","DEFAULT_RESOLUTION","length","pts","split","w","h","query","selector","from","NodeList","Element","Document","querySelectorAll","push","proportionalParentCoverResize","elements","ratio","offset","parentNode","offsetHeight","offsetWidth","style","width","height","RE_YOUTUBE","RE_VIMEO","RE_VIDEO","isUserAgentMobile","isMobile","navigator","maxTouchPoints","window","matchMedia","matches","userAgent","SuperVideoBackground","constructor","elem","id","uid","type","is_mobile","playerElement","isIntersecting","playing","muted","currentState","initialPlay","initialVolume","volume","DEFAULTS","parseProperties","pause","resolution_mod","resolution","autoplay","currentTime","duration","percentComplete","timeToPercentage","buildWrapperHTML","mobile","time","percentageToTime","percentage2","resize","dispatchEvent","stylePlayerElement","top","left","transform","position","opacity","parent","wrapper_styles","loadBackground","property","indexOf","controls","right","destroy","removeAttribute","timeUpdateTimer","clearInterval","setDuration","setStartAt","startAt","setEndAt","endAt","onVideoEnded","CustomEvent","bubbles","detail","mobileLowBatteryAutoplayHack","softPlay","softPause","once","defaults","attr_prefix","res_params","k","hasOwnProperty","data","i","temp_data","getAttribute","YoutubeBackground","injectScript","player","injectPlayer","STATES","timeUpdateInterval","initYTPlayer","startTimeUpdateTimer","setInterval","onVideoTimeUpdate","bind","stopTimeUpdateTimer","convertState","state","YT","Player","events","onVideoPlayerReady","onVideoStateChange","setVolume","querySelector","tag","src","firstScriptTag","getElementsByTagName","insertBefore","generatePlayerElement","generateSrcURL","site","loop","setSource","url","match","hasAttribute","ctime","getCurrentTime","seekTo","playVideo","getDuration","event","seek","seconds","allowSeekAhead","pauseVideo","play","unmute","unMute","mute","getVolume","VimeoBackground","initVimeoPlayer","onVimeoIframeAPIReady","Vimeo","on","onVideoPlay","onVideoPause","onVideoBuffering","updateState","then","self","setCurrentTime","setMuted","VideoBackground","vid_data","link","ext","exec","MIME_MAP","mime","toLowerCase","onVideoLoadedMetadata","onVideoCanPlay","source","fastSeek","VideoBackgrounds","index","self2","intersectionObserver","IntersectionObserver","entries","forEach","entry","target","resizeObserver","ResizeObserver","requestAnimationFrame","initPlayers","getVidID","generateUID","yb","vm","vid","observe","unobserve","destroyAll","re","YOUTUBE","VIMEO","VIDEO","lastIndex","regex_pts","pref","replace","get","pauseAll","playAll","muteAll","unmuteAll","setVolumeAll","callback","onYouTubeIframeAPIReady","setTimeout","loaded","jQuery","$","fn","youtube_background","$this","VIDEO_BACKGROUNDS"],"sources":["/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/lib/buttons.js","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/node_modules/book-of-spells/src/helpers.mjs","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/node_modules/book-of-spells/src/dom.mjs","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/node_modules/book-of-spells/src/regex.mjs","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/node_modules/book-of-spells/src/browser.mjs","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/lib/super-video-background.js","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/lib/youtube-background.js","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/lib/vimeo-background.js","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/lib/video-background.js","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/video-backgrounds.js","/Users/anjaehyeon/Desktop/JaeHyunGround/프로젝트/portfolio/node_modules/youtube-background/src/main.js"],"sourcesContent":["\nfunction buttonOn(buttonObj) {\n  if (!buttonObj) return;\n  buttonObj.element.classList.add(buttonObj.stateClassName);\n  buttonObj.element.firstChild.classList.remove(buttonObj.stateChildClassNames[0]);\n  buttonObj.element.firstChild.classList.add(buttonObj.stateChildClassNames[1]);\n  buttonObj.element.setAttribute('aria-checked', false);\n}\n\nfunction buttonOff(buttonObj) {\n  if (!buttonObj) return;\n  buttonObj.element.classList.remove(buttonObj.stateClassName);\n  buttonObj.element.firstChild.classList.add(buttonObj.stateChildClassNames[0]);\n  buttonObj.element.firstChild.classList.remove(buttonObj.stateChildClassNames[1]);\n  buttonObj.element.setAttribute('aria-checked', true);\n}\n\nexport function generateActionButton(obj, props) {\n  const btn = document.createElement('button');\n  btn.className = props.className;\n  btn.innerHTML = props.innerHtml;\n  btn.setAttribute('role', 'switch');\n  btn.firstChild.classList.add(props.stateChildClassNames[0]);\n  btn.setAttribute('aria-checked', !props.initialState);\n  props.element = btn;\n\n  if (obj.params[props.condition_parameter] === props.initialState) {\n    buttonOn(props);\n  }\n\n  btn.addEventListener('click', function(e) {\n    if (this.classList.contains(props.stateClassName)) {\n      buttonOff(props);\n      obj[props.actions[0]]();\n    } else {\n      buttonOn(props);\n      obj[props.actions[1]]();\n    }\n  });\n\n  obj.buttons[props.name] = {\n    element: btn,\n    button_properties: props\n  };\n\n  obj.controls_element.appendChild(btn);\n};\n","/**\n * Shallow merges two objects together. Used to pass simple options to functions.\n * \n * @param {object} target The target object to merge into\n * @param {object} source The source object to merge from\n * @returns object The merged object\n * @example\n * const target = { foo: 'bar' }\n * const source = { bar: 'baz' }\n * shallowMerge(target, source) // { foo: 'bar', bar: 'baz' }\n */\nexport function shallowMerge(target, source) {\n  for (const key in source) {\n    target[key] = source[key]\n  }\n}\n\n/**\n * Deep merge function that's mindful of arrays and objects\n * \n * @param {object} target The target object to merge into\n * @param {object} source The source object to merge from\n * @returns object The merged object\n * @example\n * const target = { foo: 'bar' }\n * const source = { bar: 'baz' }\n * deepMerge(target, source) // { foo: 'bar', bar: 'baz' }\n */\nexport function deepMerge(target, source) {\n  if (isObject(source) && isObject(target)) {\n    for (const key in source) {\n      target[key] = deepMerge(target[key], source[key])\n    }\n  } else if (isArray(source) && isArray(target)) {\n    for (let i = 0; i < source.length; i++) {\n      target[i] = deepMerge(target[i], source[i])\n    }\n  } else {\n    target = source\n  }\n  return target\n}\n\n/**\n * Deep clone function that's mindful of arrays and objects\n * \n * @param {object} o The object to clone\n * @returns object The cloned object\n * @example\n * const obj = { foo: 'bar' }\n * const clone = clone(obj)\n * clone.foo = 'baz'\n * console.log(obj.foo) // 'bar'\n * console.log(clone.foo) // 'baz'\n * console.log(obj === clone) // false\n * console.log(JSON.stringify(obj) === JSON.stringify(clone)) // true\n * @todo Check if faster than assign. This function is pretty old...\n */ \nexport function clone(o) {\n  let res = null\n  if (isArray(o)) {\n    res = []\n    for (const i in o) {\n      res[i] = clone(o[i])\n    }\n  } else if (isObject(o)) {\n    res = {}\n    for (const i in o) {\n      res[i] = clone(o[i])\n    }\n  } else {\n    res = o\n  }\n  return res\n}\n\n/**\n * Check if an object is empty\n * \n * @param {object} o The object to check\n * @returns boolean True if the object is empty, false otherwise\n * @example\n * isEmptyObject({}) // => true\n * isEmptyObject({ foo: 'bar' }) // => false\n */\nexport function isEmptyObject(o) {\n  for (const i in o) {\n    return false\n  }\n  return true\n}\n\n/**\n * Check if an array is empty, substitute for Array.length === 0\n * \n * @param {array} o The array to check\n * @returns boolean True if the array is empty, false otherwise\n * @example\n * isEmptyArray([]) // => true\n * isEmptyArray([1, 2, 3]) // => false\n */\nexport function isEmptyArray(o) {\n  return o.length === 0\n}\n\n/**\n * Check if a variable is empty\n * \n * @param {any} o The variable to check\n * @returns boolean True if the variable is empty, false otherwise\n * @example\n * isEmpty({}) // => true\n * isEmpty([]) // => true\n * isEmpty('') // => true\n * isEmpty(null) // => false\n * isEmpty(undefined) // => false\n * isEmpty(0) // => false\n */\nexport function isEmpty(o) {\n  if (isObject(o)) {\n    return isEmptyObject(o)\n  } else if (isArray(o)) {\n    return isEmptyArray(o)\n  } else if (isString(o)) {\n    return o === ''\n  }\n  return false\n}\n\n/**\n * Try to convert a string to a boolean\n * \n * @param {string} str The string to convert\n * @returns boolean The converted boolean or undefined if conversion failed\n * @example\n * stringToBoolean('true') // => true\n * stringToBoolean('false') // => false\n * stringToBoolean('foo') // => null\n */\nexport function stringToBoolean(str) {\n  if (/^\\s*(true|false)\\s*$/i.test(str)) return str === 'true'\n}\n\n/**\n * Try to convert a string to a number\n * \n * @param {string} str The string to convert\n * @returns number The converted number or undefined if conversion failed\n * @example\n * stringToNumber('1') // => 1\n * stringToNumber('1.5') // => 1.5\n * stringToNumber('foo') // => null\n * stringToNumber('1foo') // => null\n */\nexport function stringToNumber(str) {\n  if (/^\\s*\\d+\\s*$/.test(str)) return parseInt(str)\n  if (/^\\s*[\\d.]+\\s*$/.test(str)) return parseFloat(str)\n}\n\n/**\n * Try to convert a string to an array\n * \n * @param {string} str The string to convert\n * @returns array The converted array or undefined if conversion failed\n * @example\n * stringToArray('[1, 2, 3]') // => [1, 2, 3]\n * stringToArray('foo') // => null\n * stringToArray('1') // => null\n * stringToArray('{\"foo\": \"bar\"}') // => null\n */\nexport function stringToArray(str) {\n  if (!/^\\s*\\[.*\\]\\s*$/.test(str)) return\n  try {\n    return JSON.parse(str)\n  } catch (e) {}\n}\n\n/**\n * Try to convert a string to an object\n * \n * @param {string} str The string to convert\n * @returns object The converted object or undefined if conversion failed\n * @example\n * stringToObject('{ \"foo\": \"bar\" }') // => { foo: 'bar' }\n * stringToObject('foo') // => null\n * stringToObject('1') // => null\n * stringToObject('[1, 2, 3]') // => null\n */\nexport function stringToObject(str) {\n  if (!/^\\s*\\{.*\\}\\s*$/.test(str)) return\n  try {\n    return JSON.parse(str)\n  } catch (e) {}\n}\n\n/**\n * Try to convert a string to a regex\n * \n * @param {string} str The string to convert\n * @returns regex The converted regex or undefined if conversion failed\n * @example\n * stringToRegex('/foo/i') // => /foo/i\n * stringToRegex('foo') // => null\n * stringToRegex('1') // => null\n */\nexport function stringToRegex(str) {\n  if (!/^\\s*\\/.*\\/g?i?\\s*$/.test(str)) return\n  try {\n    return new RegExp(str)\n  } catch (e) {}\n}\n\n/**\n * Try to convert a string to a primitive\n * \n * @param {string} str The string to convert\n * @returns {null|boolean|int|float|string} The converted primitive or input string if conversion failed\n * @example\n * stringToPrimitive('null') // => null\n * stringToPrimitive('true') // => true\n * stringToPrimitive('false') // => false\n * stringToPrimitive('1') // => 1\n * stringToPrimitive('1.5') // => 1.5\n * stringToPrimitive('foo') // => 'foo'\n * stringToPrimitive('1foo') // => '1foo'\n */\nexport function stringToPrimitive(str) {\n  if (/^\\s*null\\s*$/.test(str)) return null\n  const bool = stringToBoolean(str)\n  if (bool !== undefined) return bool\n  return stringToNumber(str) || str\n}\n\n/**\n * Try to convert a string to a data type\n * \n * @param {string} str The string to convert\n * @returns any The converted data type or input string if conversion failed\n * @example\n * stringToData('null') // => null\n * stringToData('true') // => true\n * stringToData('false') // => false\n * stringToData('1') // => 1\n * stringToData('1.5') // => 1.5\n * stringToData('foo') // => 'foo'\n * stringToData('1foo') // => '1foo'\n * stringToData('[1, 2, 3]') // => [1, 2, 3]\n * stringToData('{ \"foo\": \"bar\" }') // => { foo: 'bar' }\n * stringToData('/foo/i') // => /foo/i\n */\nexport function stringToType(str) {\n  if (/^\\s*null\\s*$/.test(str)) return null\n  const bool = stringToBoolean(str)\n  if (bool !== undefined) return bool\n  return stringToNumber(str) || stringToArray(str) || stringToObject(str) || stringToRegex(str) || str\n}\n\n/**\n * If provided variable is an object\n * \n * @param {any} o \n * @returns boolean\n * @example\n * isObject({}) // => true\n * isObject([]) // => false\n * isObject(null) // => false\n */\nexport function isObject(o) {\n  return typeof o === 'object' && !Array.isArray(o) && o !== null\n}\n\n/**\n * If provided variable is an array. Just a wrapper for Array.isArray\n * \n * @param {any} o\n * @returns boolean\n * @example\n * isArray([]) // => true\n * isArray({}) // => false\n */\nexport function isArray(o) {\n  return Array.isArray(o)\n}\n\n/**\n * If provided variable is a string. Just a wrapper for typeof === 'string'\n * \n * @param {any} o\n * @returns boolean\n * @example\n * isString('foo') // => true\n * isString({}) // => false\n */\nexport function isString(o) {\n  return typeof o === 'string'\n}\n\n/**\n * If provided variable is a function, substitute for typeof === 'function'\n * \n * @param {any} o\n * @returns boolean\n * @example\n * isFunction(function() {}) // => true\n * isFunction({}) // => false\n */\nexport function isFunction(o) {\n  return typeof o === 'function'\n}\n\n/**\n * If object property is a function\n * \n * @param {object} obj\n * @param {string} propertyName\n * @returns boolean\n * @example\n * const obj = { foo: 'bar', baz: function() {} }\n * propertyIsFunction(obj, 'foo') // => false\n * propertyIsFunction(obj, 'baz') // => true\n */\nexport function propertyIsFunction(obj, propertyName) {\n  return obj.hasOwnProperty(propertyName) && isFunction(obj[propertyName])\n}\n\n/**\n * If object property is a string\n * \n * @param {object} obj\n * @param {string} propertyName\n * @returns boolean\n * @example\n * const obj = { foo: 'bar', baz: function() {} }\n * propertyIsString(obj, 'foo') // => true\n * propertyIsString(obj, 'baz') // => false\n */\nexport function propertyIsString(obj, propertyName) {\n  return obj.hasOwnProperty(propertyName) && isString(obj[propertyName])\n}\n\n/**\n * Transforms a dash separated string to camelCase\n *\n * @param {string} str\n * @returns boolean\n * @example\n * transformDashToCamelCase('foo-bar') // => 'fooBar'\n * transformDashToCamelCase('foo-bar-baz') // => 'fooBarBaz'\n * transformDashToCamelCase('foo') // => 'foo'\n * transformDashToCamelCase('fooBarBaz-qux') // => 'fooBarBazQux'\n */\nexport function transformDashToCamelCase(str) {\n  return str.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase() });\n}\n\n/**\n * Transforms a camelCase string to dash separated string\n * \n * @param {string} str\n * @returns boolean\n * @example\n * transformCamelCaseToDash('fooBar') // => 'foo-bar'\n * transformCamelCaseToDash('fooBarBaz') // => 'foo-bar-baz'\n * transformCamelCaseToDash('foo') // => 'foo'\n * transformDashToCamelCase('fooBarBaz-qux') // => 'foo-bar-baz-qux'\n */\nexport function transformCamelCaseToDash(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * Maps an array of objects by a property name\n * \n * @param {array} arr\n * @param {string} propertyName\n * @returns object\n * @example\n * const arr = [{ foo: 'bar' }, { foo: 'baz' }]\n * mapByProperty(arr, 'foo') // => { bar: { foo: 'bar' }, baz: { foo: 'baz' } }\n */\nexport function mapByProperty(arr, propertyName) {\n  const res = {}\n  for (let i = 0; i < arr.length; i++) {\n    res[arr[i][propertyName]] = arr[i]\n  }\n  return res\n}\n\n/**\n * Maps an array of objects by a property name to another property name\n * \n * @param {array} arr\n * @param {string} keyPropertyName\n * @param {string} valuePropertyName\n * @returns object\n * @example\n * const arr = [{ foo: 'bar', baz: 'qux' }, { foo: 'quux', baz: 'corge' }]\n * mapPropertyToProperty(arr, 'foo', 'baz') // => { bar: 'qux', quux: 'corge' }\n */\nexport function mapPropertyToProperty(arr, keyPropertyName, valuePropertyName) {\n  const res = {}\n  for (let i = 0; i < arr.length; i++) {\n    res[arr[i][keyPropertyName]] = arr[i][valuePropertyName]\n  }\n  return res\n}\n\n/**\n * Remove accents from a string\n * \n * @param {string} inputString\n * @returns string\n * @example\n * removeAccents('áéíóú') // => 'aeiou'\n * removeAccents('ÁÉÍÓÚ') // => 'AEIOU'\n * removeAccents('señor') // => 'senor'\n * removeAccents('Œ') // => 'OE'\n */\nexport function removeAccents(inputString) {\n  return inputString.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').replace(/\\œ/g, \"oe\").replace(/\\æ/g, \"ae\").normalize('NFC')\n}\n\n/**\n * Strip HTML tags from a string\n * \n * @param {string} inputString\n * @returns string\n * @example\n * stripHTMLTags('<span>foo</span>') // => 'foo'\n * stripHTMLTags('<span>foo</span> <span>bar</span>') // => 'foo bar'\n */\nexport function stripHTMLTags(inputString) {\n  return inputString.replace(/<[^>]*>/g, '')\n}\n\n/**\n * Slugify a string, e.g. 'Foo Bar' => 'foo-bar'. Similar to WordPress' sanitize_title(). Will remove accents and HTML tags.\n * \n * @param {string} str \n * @returns string\n * @example\n * slugify('Foo Bar') // => 'foo-bar'\n * slugify('Foo Bar <span>baz</span>') // => 'foo-bar-baz'\n */\nexport function slugify(str) {\n  str = str.trim().toLowerCase()\n  str = removeAccents(str)\n  str = stripHTMLTags(str)\n  return str.replace(/\\s+|\\.+|\\/+|\\\\+|—+|–+/g, '-').replace(/[^\\w0-9\\-]+/g, '').replace(/-{2,}/g, '-').replace(/^-|-$/g, '')\n}\n\n/**\n * Check if object has multiple properties\n * \n * @param {object} obj\n * @param {string|array} properties\n * @returns boolean\n * @example\n * const obj = { foo: 'bar', baz: 'qux' }\n * hasOwnProperties(obj, ['foo', 'baz']) // => true\n * hasOwnProperties(obj, ['foo', 'baz', 'qux']) // => false\n */\nexport function hasOwnProperties(obj, properties) {\n  if(!isArray(properties)) properties = [properties]\n  for (let i = 0; i < properties.length; i++) {\n    if (!obj.hasOwnProperty(properties[i])) return false\n  }\n  return true\n}\n\n/**\n * Finds the closest number to the set goal in an array to a given number\n * \n * @param {number} goal Number to search for\n * @param {array} arr Array of numbers to search in\n * @returns number\n * @example\n * closestNumber(10, [1, 2, 3, 4, 5, 6, 7, 8, 9]) // => 9\n * closestNumber(10, [1, 2, 3, 4, 5, 6, 7, 8, 9, 11]) // => 9\n * closestNumber(10, [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 9.5]) // => 9.5\n * closestNumber(10, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) // => 10\n */\nexport function closestNumber(goal, arr) {\n  return arr.reduce(function(prev, curr) {\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev\n  })\n}\n\n/**\n * Truncate a string to a given number of words\n * \n * @param {string} str String to truncate\n * @param {number} numWords Number of words to truncate to\n * @param {string} ellipsis Ellipsis to append to the end of the string\n * @returns string\n * @example\n * truncateString('foo bar baz', 2) // => 'foo bar…'\n * truncateString('foo bar baz', 2, '...') // => 'foo bar...'\n * truncateString('foo bar. baz', 2, '...') // => 'foo bar. ...'\n */\nexport function truncateString(str, numWords, ellipsis = '…') {\n  const words = str.trim().split(' ')\n  if (words.length <= numWords) return str\n  if (numWords <= 0) return ''\n  if (/[.?!]$/.test(words[numWords - 1]) && ellipsis.trim() !== '') ellipsis = ` ${ellipsis}`\n  return words.slice(0, numWords).join(' ') + ellipsis\n}\n\n/**\n * Generates a random integer between two values, inclusive of both\n * \n * @param {number} min Minimum value\n * @param {number} max Maximum value\n * @returns number\n * @example\n * randomIntInclusive(1, 10) // => 1\n * randomIntInclusive(1, 10) // => 10\n * randomIntInclusive(1, 10) // => 5\n */\nexport function randomIntInclusive(min, max) {\n  if (min > max) [min, max] = [max, min]\n  if (min === max) return min\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * Gets fixed number of digits after the decimal point\n * \n * @param {number} number Number to fix\n * @param {number} digits Number of digits to fix to\n * @returns number\n * @example\n * fixed(1.234, 2) // => 1.23\n * fixed(1.235, 2) // => 1.24\n * fixed(1.234) // => 1\n * fixed(1.234, 0) // => 1\n * fixed(1.234, 5) // => 1.234\n * @note Gotta ask myself why I wrote this function in the first place... 🤔 It's just not useful in a lot of cases lol...\n */\nexport function fixed(number, digits) {\n  if (!digits) return parseInt(number)\n  return parseFloat(number.toFixed(digits))\n}\n\n/**\n * Calculates the percentage of a number in relation to another number\n * \n * @param {number} num Number to calculate percentage of\n * @param {number} total Total number\n * @returns number\n * @example\n * percentage(1, 10) // => 10\n * percentage(5, 10) // => 50\n * percentage(10, 10) // => 100\n * percentage(0, 10) // => 0\n * percentage(10, 2) // => 500\n */\nexport function percentage(num, total) {\n  if (!num || !total || Number.isNaN(num) || Number.isNaN(total)) return 0\n  return num / total * 100\n}\n\n/**\n * Parses a resolution string into a number. Resolution string is in the format of 'width:height', e.g. '16:9' \n * \n * @param {string} res Resolution string. Format is 'width:height', e.g. '16:9', or 'widthxheight', e.g. '16x9', or 'width-height', e.g. '16-9', or 'width/height', e.g. '16/9'\n * @returns number\n * @example\n * parseResolutionString('16:9') // => 1.7777777778\n * parseResolutionString('4:3') // => 1.3333333333\n * parseResolutionString('4x3') // => 1.3333333333\n * parseResolutionString('4-3') // => 1.3333333333\n */\nexport function parseResolutionString(res) {\n  const DEFAULT_RESOLUTION = 1.7777777778 // 16:9\n  if (!res || !res.length || /16[\\:x\\-\\/]{1}9/i.test(res)) return DEFAULT_RESOLUTION\n  const pts = res.split(/\\s?[\\:x\\-\\/]{1}\\s?/i)\n  if (pts.length < 2) return DEFAULT_RESOLUTION\n\n  const w = parseInt(pts[0])\n  const h = parseInt(pts[1])\n\n  if (w === 0 || h === 0) return DEFAULT_RESOLUTION\n  if (isNaN(w) || isNaN(h)) return DEFAULT_RESOLUTION\n\n  return w/h;\n}\n","/** @module dom */\n\nimport { transformDashToCamelCase, isArray, isString } from './helpers.mjs'\n\n/**\n * Checks if an element is empty\n * \n * @param {HTMLElement} element \n * @returns boolean\n * @example\n * document.body.innerHTML = `\n *  <div id=\"empty-element\"></div>\n *  <div id=\"non-empty-element1\">foo</div>\n *  <div id=\"non-empty-element2\"><br></div>`\n * \n * isEmptyElement(document.getElementById('empty-element')) // => true\n * isEmptyElement(document.getElementById('non-empty-element1')) // => false\n * isEmptyElement(document.getElementById('non-empty-element2')) // => false\n */\nexport function isEmptyElement(element) {\n  return element.innerHTML.trim() === ''\n}\n\n/**\n * Removes all elements matching a selector from the DOM\n * \n * @param {string|HTMLElement|Element} selector The selector to select elements to remove\n * @param {HTMLElement|Element} [from=document] The element to remove elements from\n * @example\n * document.body.innerHTML = `\n * <div id=\"foo\"></div>\n * <div id=\"bar\"></div>\n * <div id=\"baz\"></div>`\n * `\n * remove('#foo, #bar') // => removes #foo and #bar\n */\nexport function remove(selector, from = document) {\n  const elements = query(selector, from)\n  for (const element of elements) {\n    element.remove()\n  }\n}\n\n/**\n * Queries the DOM for a single element and returns it. Substitutes for `document.querySelector(selector)` and JQuery's `$(selector).first()`\n * \n * @param {string|HTMLElement|Element|Array<HTMLElement|Element>|NodeList} selector The selector to select an element\n * @param {HTMLElement|Element} [from=document] The element to query from\n * @returns {HTMLElement|Element}\n * @example\n * document.body.innerHTML = `\n * <div id=\"foo\"></div>\n * <div id=\"bar\"></div>\n * <div id=\"baz\"></div>`\n * \n * querySingle('#foo') // => <div id=\"foo\"></div>\n * querySingle(document.getElementById('foo')) // => <div id=\"foo\"></div>\n * querySingle(document.querySelector('#foo')) // => <div id=\"foo\"></div>\n */\nexport function querySingle(selector, from = document) {\n  if (selector instanceof Element) return selector\n  return from.querySelector(selector)\n}\n\n/**\n * Queries the DOM for elements and returns them. Substitutes for `document.querySelectorAll(selector)` and JQuery's `$(selector)`\n * \n * @param {string|HTMLElement|Element|Array<HTMLElement|Element>|NodeList} selector The selector to select elements\n * @param {HTMLElement|Element} [from=document] The element to query from\n * @returns {Array<Element>|NodeList}\n * @example\n * document.body.innerHTML = `\n * <div id=\"foo\"></div>\n * <div id=\"bar\"></div>\n * <div id=\"baz\"></div>`\n * \n * query('#foo') // => [<div id=\"foo\"></div>]\n * query(document.getElementById('foo')) // => [<div id=\"foo\"></div>]\n * query('div') // => [<div id=\"foo\"></div>, <div id=\"bar\"></div>, <div id=\"baz\"></div>]\n */\nexport function query(selector, from = document) {\n  if (selector instanceof Array || selector instanceof NodeList) return selector\n  if (selector instanceof Element) return [selector]\n  if (from instanceof Element || from instanceof Document) return from.querySelectorAll(selector)\n  if (isString(from)) from = query(from)\n  if (!from instanceof Array  && !from instanceof NodeList) return []\n  const res = []\n  for (const element of from) {\n    res.push(...element.querySelectorAll(selector))\n  }\n  return res\n}\n\n/**\n * Sets element styles from passed object of styles. Can also transform dash-case to camelCase for CSS properties\n * \n * @param {HTMLElement} element The element to set styles on\n * @param {object} styles The object of styles to set\n * @param {boolean} transform Whether to transform dash-case to camelCase for CSS properties\n * @example\n * css(document.getElementById('foo'), { 'background-color': 'red', 'font-size': '16px' }, true) // => sets background-color and font-size\n * css(document.getElementById('foo'), { backgroundColor: 'red', fontSize: '16px' }) // => sets background-color and font-size\n */\nexport function css(element, styles, transform = false) {\n  if (!element || !styles) return\n  for (let property in styles) {\n    if (transform) property = transformDashToCamelCase(property)\n    element.style[property] = styles[property]\n  }\n}\n\n/**\n * Decodes HTML entities in a string\n * \n * @param {string} html The HTML string to decode\n * @returns {string} The decoded HTML string\n * @example\n * decodeHTML('&lt;div&gt;foo&lt;/div&gt;') // => '<div>foo</div>'\n * decodeHTML('&lt;div&gt;foo&lt;/div&gt;&lt;div&gt;bar&lt;/div&gt;') // => '<div>foo</div><div>bar</div>'\n */\nexport function decodeHTML(html) {\n  const txt = document.createElement('textarea')\n  txt.innerHTML = html\n  const res = txt.value\n  txt.remove()\n  return res\n}\n\n/**\n * Inserts an element before another element\n * \n * @param {HTMLElement} targetElement The element to insert before\n * @param {HTMLElement} newElement The element to insert\n * @example\n * const target = document.getElementById('target')\n * const newElement = document.createElement('div')\n * newElement.id = 'newElement'\n * insertBeforeElement(target, newElement)\n * // <div id=\"newElement\"></div>\n * // <div id=\"target\"></div>\n */\nexport function insertBeforeElement(targetElement, newElement) {\n  if (!targetElement || !newElement) return\n  targetElement.parentNode.insertBefore(newElement, targetElement);\n}\n\n/**\n * Toggles an attribute value on an element\n * \n * @param {HTMLElement} element The element to toggle the attribute on\n * @param {string} attribute The attribute to toggle\n * @param {string} on Default: 'true'\n * @param {string} off Default: 'false'\n * @example\n * toggleAttributeValue(element, 'aria-expanded', 'true', 'false')\n * toggleAttributeValue(element, 'aria-expanded')\n */\nexport function toggleAttributeValue(element, attribute, on = 'true', off = 'false') {\n  if (!element.hasAttribute(attribute)) return\n\n  if (element.getAttribute(attribute) === on) {\n    element.setAttribute(attribute, off)\n  } else {\n    element.setAttribute(attribute, on)\n  }\n}\n\n/**\n * Converts a duration string to milliseconds integer\n * \n * @param {string} duration The duration string to convert, e.g. '1s', '100ms', '0.5s'\n * @returns {number} The duration in milliseconds\n * @example\n * convertToMilliseconds('1s') // 1000\n * convertToMilliseconds('100ms') // 100\n * convertToMilliseconds('0.5s') // 500\n * convertToMilliseconds('0.5') // 0\n * convertToMilliseconds('foo') // 0\n */\nexport function cssTimeToMilliseconds(duration) {\n  const regExp = new RegExp('([0-9.]+)([a-z]+)', 'i')\n  const matches = regExp.exec(duration)\n  if (!matches) return 0\n  \n  const unit = matches[2]\n  switch (unit) {\n    case 'ms':\n      return parseFloat(matches[1])\n    case 's':\n      return parseFloat(matches[1]) * 1000\n    default:\n      return 0\n  }\n}\n\n/**\n * Returns a map of transition properties and durations\n * \n * @param {HTMLElement} element The element to get the transition properties and durations from\n * @returns {object<string, number>} A map of transition properties and durations\n * @example\n * getTransitionDurations(element) // { height: 1000 } if transition in CSS is set to 'height 1s'\n * getTransitionDurations(element) // { height: 500, opacity: 1000 } if transition in CSS is set to 'height 0.5s, opacity 1s'\n */\nexport function getTransitionDurations(element) {\n  if (!element) {}\n  const styles = getComputedStyle(element)\n  const transitionProperties = styles.getPropertyValue('transition-property').split(',')\n  const transitionDurations = styles.getPropertyValue('transition-duration').split(',')\n  \n  const map = {}\n  \n  for (let i = 0; i < transitionProperties.length; i++) {\n    const property = transitionProperties[i].trim()\n    map[property] = transitionDurations.hasOwnProperty(i) ? cssTimeToMilliseconds(transitionDurations[i].trim()) : null\n  }\n  \n  return map\n}\n\n/**\n * Check a list of elements if any of them matches a selector\n * \n * @param {Array<HTMLElement>|NodeList|HTMLElement} elements The elements to check\n * @param {string} selector The selector to check\n * @returns {boolean} True if any of the elements matches the selector, false otherwise\n * @example\n * document.body.innerHTML = `\n * <div id=\"foo\"></div>\n * <div id=\"bar\"></div>\n * <div id=\"baz\"></div>`\n * \n * matchesAny(document.querySelectorAll('div'), '#foo') // => true\n * matchesAny(document.querySelectorAll('div'), '#qux') // => false\n */\nexport function matchesAny(elements, selector) {\n  if (!elements || !selector || !elements.length) return false\n  if (elements instanceof Element) elements = [elements]\n  if (isString(elements)) elements = query(elements)\n  for (const element of elements) {\n    if (element.matches(selector)) return true\n  }\n  return false\n}\n\n/**\n * Check a list of elements if all of them matches a selector\n * \n * @param {Array<HTMLElement>|NodeList|HTMLElement} elements The elements to check\n * @param {string} selector The selector to check\n * @returns {boolean} True if all of the elements matches the selector, false otherwise\n * @example\n * document.body.innerHTML = `\n * <div id=\"foo\"></div>\n * <div id=\"bar\"></div>\n * <div id=\"baz\"></div>`\n * \n * matchesAll(document.querySelectorAll('div'), 'div') // => true\n * matchesAll(document.querySelectorAll('div'), '#foo') // => false\n */\nexport function matchesAll(elements, selector) {\n  if (!elements || !selector || !elements.length) return false\n  if (elements instanceof Element) elements = [elements]\n  if (isString(elements)) elements = query(elements)\n  for (const element of elements) {\n    if (!element.matches(selector)) return false\n  }\n  return true\n}\n\n\n/**\n * Detaches an element from the DOM and returns it\n * \n * @param {HTMLElement} element The element to detach\n * @example\n * detachElement(element)\n * // => element\n * console.log(element.parentNode) // => null\n */\nexport function detachElement(element) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n  return element\n}\n\n/**\n * Gets table data from a table element, a simple regular table element, or a table like structure.\n * Useful for scraping data.\n * \n * @param {string} selector The selector to select the table element\n * @param {Array<string>|string|null} headers The headers to use for the data. If 'auto' is passed, the row containing th or the first row will be used as headers\n * @param {string} [rowSelector='tr'] The selector to select the rows\n * @param {string} [cellSelector='td'] The selector to select the cells\n * @returns {Array<object>} An array of objects with the properties as keys and the cell values as values\n * @example\n * document.body.innerHTML = `\n * <table id=\"table\">\n *  <thead>\n *   <tr>\n *   <th>Foo</th>\n *  <th>Bar</th>\n * </tr>\n * </thead>\n * <tbody>\n * <tr>\n * <td>Foo 1</td>\n * <td>Bar 1</td>\n * </tr>  \n * <tr>\n * <td>Foo 2</td>\n * <td>Bar 2</td>\n * </tr>\n * </tbody>\n * </table>`\n * \n * getTableData('#table', ['foo', 'bar'])\n * // => [\n * //  { foo: 'Foo 1', bar: 'Bar 1' },\n * //  { foo: 'Foo 2', bar: 'Bar 2' }\n * // ]\n */\nexport function getTableData(selector, headers, rowSelector = 'tr', cellSelector = 'td', headerCellSelector = 'th') {\n  const table = typeof selector === 'string' ? document.querySelector(selector) : selector\n  const res = []\n  const rows = table.querySelectorAll(rowSelector)\n  let start = 0\n\n  function iterateHeaders(arr) {\n    if (!arr || !arr.length) return\n    const res = []\n    for (let i = 0; i < arr.length; i++) {\n      res.push(arr[i].textContent.trim())\n    }\n    return res\n  }\n\n  if (headers && isString(headers) && headers === 'auto') {\n    let headerCells = table.querySelectorAll(headerCellSelector)\n    \n    if (headerCells && headerCells.length) {\n      headers = iterateHeaders(headerCells)\n    } else {\n      headers = iterateHeaders(rows[0].querySelectorAll(cellSelector))\n      start = 1\n    }\n  }\n\n  for (let i = start; i < rows.length; i++) {\n    const row = rows[i]\n    const cells = row.querySelectorAll(cellSelector)\n    if (!cells || !cells.length) continue\n\n    let rowData = []\n    if (headers && isArray(headers) && headers.length) {\n      rowData = {}\n      for (let j = 0; j < headers.length; j++) {\n        rowData[headers[j]] = cells[j] ? cells[j].textContent.trim() : null\n      }\n    } else {\n      for (let j = 0; j < cells.length; j++) {\n        rowData.push(cells[j].textContent.trim())\n      }\n    }\n    res.push(rowData)\n  }\n  return res\n}\n\n/**\n * Parses HTML string to a DOM Node\n * \n * @param {string} html The HTML string to parse\n * @param {boolean} [allChildren=false] If true, all children of the body will be returned, otherwise only the first child\n * @returns {Node} The parsed DOM Node\n * @example\n * parseDOM('<div>foo</div>')\n */\nexport function parseDOM(html, allChildren) {\n  const parser = new DOMParser()\n  const doc = parser.parseFromString(html, 'text/html')\n  return !allChildren ? doc.body.firstChild : doc.body.childNodes\n}\n\n/**\n * Loads an image form a provided source url and calls a callback when it's loaded\n * \n * @param {string} src The source url of the image\n * @param {Function} [callback] The callback to call when the image is loaded\n * @example\n * loadImage('https://example.com/image.png', () => {\n *  console.log('Image loaded')\n * })\n */\nexport function loadImage(src, callback) {\n  const img = new Image()\n  if (callback)\n    img.addEventListener('load', callback, false);\n  img.src = src\n}\n\n/**\n * Delegate DOM events using MutationObserver with a fallback to document.addEventListener\n * \n * @param {string} selector The selector to select the elements to delegate the event to\n * @param {string} eventType The event type to delegate, like `click`\n * @param {Function} handler The handler to call when the event is triggered.\n * @returns {MutationObserver | null} The MutationObserver instance\n * @example\n * delegateEvent('.foo', 'click', (e, target) => {\n * console.log('Clicked on', target)\n * })\n */\nexport function delegateEvent(selector, eventType, handler) {\n  if (typeof MutationObserver === 'undefined') {\n    document.addEventListener(eventType, (e) => {\n      const target = e.target.closest(selector)\n      if (target) handler(e, target)\n    })\n\n    return null\n  }\n\n  const observer = new MutationObserver((mutations) => {\n    for (const mutation of mutations) {\n      for (const node of mutation.addedNodes) {\n        if (!(node instanceof HTMLElement)) continue\n        if (!node.matches(selector)) continue\n        node.addEventListener(eventType, (e) => {\n          handler(e, e.currentTarget)\n        })\n      }\n    }\n  })\n\n  for (const node of document.querySelectorAll(selector)) {\n    node.addEventListener(eventType, (e) => {\n      handler(e, e.currentTarget)\n    })\n  }\n\n  observer.observe(document.body, { childList: true, subtree: true })\n  return observer\n}\n\n/**\n * Run a handler on selected elements and on elements added to the DOM with the same selector, \n * or can be delegateEvent alias.\n * \n * @param {string} selector The selector to select the elements to run the handler on\n * @param {string | Function} eventTypeOrHandler The event type to delegate, like `click`, or the handler to call on every element\n * @param {Function} [handler] The handler to call when the event is triggered.\n * @returns {MutationObserver | null} The MutationObserver instance\n * @see delegateEvent\n * @example\n * on('.foo', (el) => {\n * console.log('Element', el, 'added to the DOM')\n * })\n * \n * on('.foo', 'click', (e, target) => {\n * console.log('Clicked on', target)\n * })\n */\nexport function on(selector, eventTypeOrHandler, handler) {\n  if (isString(eventTypeOrHandler)) {\n    return delegateEvent(selector, eventTypeOrHandler, handler)\n  }\n\n  const observer = new MutationObserver((mutations) => {\n    for (const mutation of mutations) {\n      for (const node of mutation.addedNodes) {\n        if (!(node instanceof HTMLElement)) continue\n        if (!node.matches(selector)) continue\n        eventTypeOrHandler(node)\n      }\n    }\n  })\n\n  for (const node of document.querySelectorAll(selector)) {\n    eventTypeOrHandler(node)\n  }\n\n  observer.observe(document.body, { childList: true, subtree: true })\n\n  return observer\n}\n\n/**\n * Adds one listener to multiple events\n * \n * @param {string|HTMLElement|NodeList} elements The elements or a selector for elements to add the event listeners to\n * @param {string|Array<string>} events The event types to add the event listeners for, like `click mouseenter`\n * @param {Function} handler The handler to call when the event is triggered.\n * @param {object} [options] The options to pass to the event listeners\n * @example\n * addListenerForEvents('.foo', 'click mouseenter', (e) => { console.log(e.type) })\n */\nexport function addListenerForEvents(elements, events, handler, options) {\n  if (elements instanceof Element) elements = [elements]\n  if (typeof elements === 'string') elements = query(elements)\n\n  const eventTypes = isArray(events) ? events : events.split(' ')\n  for (const element of elements) {\n    for (const eventType of eventTypes) {\n      element.addEventListener(eventType, handler, options)\n    }\n  }\n}\n\n/**\n * Removes one listener from multiple registered events\n * \n * @param {string|HTMLElement|NodeList} elements The elements or a selector for elements to remove the event listeners from\n * @param {string|Array<string>} events The event types to remove the event listeners for, like `click mouseenter`\n * @param {Function} handler The handler to remove\n * @param {object} [options] The options to pass to the event listeners\n * @example\n * removeListenerForEvents('.foo', 'click mouseenter', (e) => { console.log(e.type) })\n */\nexport function removeListenerForEvents(elements, events, handler, options) {\n  if (elements instanceof Element) elements = [elements]\n  if (typeof elements === 'string') elements = query(elements)\n\n  const eventTypes = isArray(events) ? events : events.split(' ')\n  for (const element of elements) {\n    for (const eventType of eventTypes) {\n      element.removeEventListener(eventType, handler, options)\n    }\n  }\n}\n\n/**\n * Resizes an element to cover its parent element while maintaining the aspect ratio\n * \n * @param {string|HTMLElement|NodeList} elements The elements or a selector for elements to resize\n * @param {number} [ratio=1] The ratio to maintain\n * @param {number} [offset=0] An offset to add to the parent element's width and height\n * @example\n * proportionalParentCoverResize('.foo', 16/9, 10)\n */\nexport function proportionalParentCoverResize(elements, ratio = 1, offset = 0) {\n  if (elements instanceof Element) elements = [elements]\n  if (typeof elements === 'string') elements = query(elements)\n\n  for (const element of elements) {\n    const h = element.parentNode.offsetHeight + offset\n    const w = element.parentNode.offsetWidth + offset\n\n    if (ratio > w/h) {\n      element.style.width = h*ratio + 'px'\n      element.style.height = h + 'px'\n    } else {\n      element.style.width = w + 'px'\n      element.style.height = w/ratio + 'px'\n    }\n  }\n}\n","/**\n * @module regex\n */\n\n/**\n * Regular expression for matching a YouTube video links and extracting their ID, works with both embed and watch URLs\n */\nexport const RE_YOUTUBE = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i\n\n/**\n * Regular expression for matching a Vimeo video links and extracting their ID, works with both embed and watch URLs, channels and groups\n */\nexport const RE_VIMEO = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i\n\n/**\n * Regular expression for matching a video URLs\n */\nexport const RE_VIDEO = /\\/([^\\/]+\\.(?:mp4|ogg|ogv|ogm|webm|avi))\\s*$/i\n\n/**\n * Regular expression for matching a image URLs\n */\nexport const RE_IMAGE = /\\/([^\\/]+\\.(?:jpg|jpeg|png|gif|svg|webp))\\s*$/i\n\n/**\n * Regular expression for matching a URL parameters\n */\nexport const RE_URL_PARAMETER = /([^\\s=&]+)=?([^&\\s]+)?/\n\n/**\n * Regular expression for matching a HTML attribute and tag names, also for matching shortcode attributes and names\n */\nexport const RE_ATTRIBUTES = /\\s*(?:([a-z_]{1}[a-z0-9\\-_]*)=?(?:\"([^\"]+)\"|'([^']+)')*)\\s*/gi\n\n/**\n * Regular expression for matching a single attribute without value\n */\nexport const RE_ATTRIBUTE_WITHOUT_VALUE = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)\\s*$/i\n\n/**\n * Regular expression for matching a single attribute with value\n */\nexport const RE_ATTRIBUTE_WITH_VALUE = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)=(\"[^\"]+\"|'[^']+')\\s*$/i\n\n/**\n * Regular expression for matching the first or last quote of a string used for removing them\n */\nexport const RE_FIRST_OR_LAST_QUOTE = /^[\"']|[\"']$/g\n","/** @module browser */\n\nimport { isEmpty, isFunction } from './helpers.mjs'\nimport { css } from './dom.mjs'\nimport { parseUrlParameters } from './parsers.mjs'\n\nexport function isUserAgentIOS(str) {\n  return /iPad|iPhone|iPod/i.test(str)\n}\n\nexport function isUserAgentMobile(str) {\n  return /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(str) ||\n    /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(str)\n}\n\nexport function isUserAgentSafari(str) {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test(str)\n}\n\n/**\n * Check if the device is an iOS device\n * \n * @returns boolean True if the device is an iOS device, false otherwise\n */\nexport function isIOS() {\n  return isUserAgentIOS(navigator.userAgent) && 'maxTouchPoints' in navigator && navigator.maxTouchPoints > 1\n}\n\n/**\n * Check if the device is a mobile device\n * \n * @returns boolean True if the device is a mobile device, false otherwise\n */\nexport function isMobile() {\n  if ('maxTouchPoints' in navigator) return navigator.maxTouchPoints > 0\n\n  if ('matchMedia' in window) return !!matchMedia('(pointer:coarse)').matches\n\n  if ('orientation' in window) return true\n\n  return isUserAgentMobile(navigator.userAgent)\n}\n\n/**\n * Check if the browser is Safari\n *\n * @returns boolean True if the browser is Safari, false otherwise\n */\nexport function isSafari() {\n  if (navigator.hasOwnProperty('vendor')) /apple/i.test(navigator.vendor)\n  return isUserAgentSafari(navigator.userAgent)\n}\n\n/**\n * Check if the browser is Safari on iOS\n * \n * @returns boolean True if the browser is Safari on iOS, false otherwise\n */\nexport function isIOSSafari() {\n  return isIOS() && isSafari()\n}\n\n/**\n * A wrapper for the matchMedia function, cause with `matchMedia` you can only either add a listener or check the media query\n * this function does both.\n * \n * @param {string} query The media query to check\n * @param {function} [callback] The callback function to call when the media query changes\n * @returns {boolean} The result of the media query\n * \n * @example\n * mediaMatcher('(min-width: 768px)', (matches) => {\n *  if (matches) {\n *    // Do something\n *  } else {\n *    // Do something else\n *  }\n * })\n * \n * // Or\n * \n * const isDesktop = mediaMatcher('(min-width: 768px)')\n */\nexport function mediaMatcher(query, callback) {\n  if (isFunction(callback)) {\n    matchMedia(query).addEventListener('change', (e) => {\n      callback(e.matches)\n    })\n\n    const mql = matchMedia(query)\n    callback(mql.matches)\n\n    return mql.matches\n  }\n\n  return matchMedia(query).matches\n}\n\n/**\n * Get the scrollbar width\n * \n * When preventing scroll with html overflow hidden the scroll bar will disappear and the whole page will shift (if the scroll bar is visible that is).\n * To substitute for the scrollbar width we can add a padding to the body element.\n * \n * @returns {number} The scrollbar width\n * \n * @example\n * const scrollbarWidth = getScrollbarWidth() // 15 (on MacOS X Safari)\n */\nexport function getScrollbarWidth() {\n  const scrollDiv = document.createElement('div')\n  \n  css(scrollDiv, {\n    width: '100px',\n    height: '100px',\n    position: 'absolute',\n    left: '-9999px',\n    zIndex: '0',\n    overflowX: 'hidden',\n    overflowY: 'scroll'\n  })\n\n  document.body.appendChild(scrollDiv)\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n  document.body.removeChild(scrollDiv)\n  return scrollbarWidth\n}\n\n/**\n * Check if the vertical scrollbar is visible\n * \n * @param {number} [scrollbarWidth] The width of the scrollbar, defaults to getScrollbarWidth()\n * @returns {boolean} True if the vertical scrollbar is visible, false otherwise\n */\nexport function hasVerticalScrollbarVisible(scrollbarWidth) {\n  if (scrollbarWidth === undefined) scrollbarWidth = getScrollbarWidth()\n  return window.innerHeight < document.body.scrollHeight && scrollbarWidth > 0\n}\n\n/**\n * Check if the horizontal scrollbar is visible\n * \n * @param {number} [scrollbarWidth] The width of the scrollbar, defaults to getScrollbarWidth()\n * @returns {boolean} True if the horizontal scrollbar is visible, false otherwise\n */\nexport function hasHorizontalScrollbarVisible(scrollbarWidth) {\n  if (scrollbarWidth === undefined) scrollbarWidth = getScrollbarWidth()\n  return window.innerWidth < document.body.scrollWidth && scrollbarWidth > 0\n}\n\n/**\n * Disable the scroll on the page.\n * \n * @param {number} [shift=0] If greater than 0 the body will be shifted to the left by the width of the scrollbar, getScrollbarWidth() is used to provide this value  \n */\nexport function disableScroll(shift) {\n  const body = document.body\n  if (shift && hasVerticalScrollbarVisible(shift)) body.style.paddingRight = `${shift}px`\n  body.style.overflow = 'hidden'\n}\n\n/**\n * Enable the scroll on the page.\n * \n * @param {boolean} [shift=0] If greater than 0 the body will be shifted back to the left by the width of the scrollbar, getScrollbarWidth() is used to provide this value\n */\nexport function enableScroll(shift) {\n  const body = document.body\n  body.style.overflow = ''\n  if (shift) body.style.paddingRight = ''\n}\n\n/**\n * Parses a string of url query parameters into an object of key value pairs. Converts the values to the correct type.\n * \n * @param {string} [entryQuery] - Optional query string to parse, without the starting ?, defaults to window.location.search without the starting ?\n * @returns {object} of key value pairs\n * @example\n * // url: https://example.com/?test&foo=bar&baz=qux\n * getQueryProperties() // { test: undefined, foo: 'bar', baz: 'qux' }\n */\nexport function getQueryProperties(entryQuery) {\n  const query = entryQuery ? entryQuery : window.location.search.replace('?', '')\n  if (isEmpty(query)) return {}\n\n  return parseUrlParameters(query)\n}\n\n/**\n * Parses a string of url hash parameters into an object of key value pairs. Converts the values to the correct type.\n * \n * @param {string} [entryHash] - Optional hash string to parse, without the starting #, defaults to window.location.hash without the starting #\n * @returns {object} of key value pairs\n * @example\n * // url: https://example.com/#test&foo=bar&baz=qux\n * getHashProperties() // { test: undefined, foo: 'bar', baz: 'qux' }\n */\nexport function getHashProperties(entryHash) {\n  const hash = entryHash ? entryHash : window.location.hash.replace('#', '')\n  if (isEmpty(hash)) return {}\n\n  return parseUrlParameters(hash)\n}\n\nfunction onHashChange(callback) {\n  const hash = window.location.hash.replace('#', '')\n  if (!isEmpty(hash)) callback(hash)\n}\n\n/**\n * Add a callback function to the hash change event\n * \n * @param {function} callback - The callback function to call when the hash changes\n * @param {string} [single] - Optional string to make sure the listener is initialized only once, defaults to window[single] which is set to true after the first call\n * @example\n * hashChange((hash) => {\n * // Do something with the hash\n * })\n */\nexport function hashChange(callback, single) {\n  onHashChange(callback)\n  \n  if (single && window[single]) return\n  if (single) window[single] = true\n  \n  window.addEventListener('hashchange', () => {\n    onHashChange(callback)\n  })\n}\n","import { generateActionButton } from './buttons.js';\nimport { isArray, stringToType, isMobile, parseResolutionString, proportionalParentCoverResize, percentage } from 'book-of-spells';\n\nexport class SuperVideoBackground {\n  constructor(elem, params, id, uid, type) {\n    if (!id) return;\n    this.is_mobile = isMobile();\n    this.type = type;\n    this.id = id;\n\n    this.element = elem;\n    this.playerElement = null;\n    this.uid = uid;\n    this.element.setAttribute('data-vbg-uid', uid);\n\n    this.buttons = {};\n    this.isIntersecting = false;\n\n    this.playing = false;\n    this.muted = false;\n    this.currentState = 'notstarted';\n\n    this.initialPlay = false;\n    this.initialVolume = false;\n\n    this.volume = 1;\n\n    this.params = {};\n\n    const DEFAULTS = {\n      'pause': false, //deprecated\n      'play-button': false,\n      'mute-button': false,\n      'autoplay': true,\n      'muted': true,\n      'loop': true,\n      'mobile': true,\n      'load-background': false,\n      'resolution': '16:9',\n      'inline-styles': true,\n      'fit-box': false,\n      'offset': 100, // since showinfo is deprecated and ignored after September 25, 2018. we add +100 to hide it in the overflow\n      'start-at': 0,\n      'end-at': 0,\n      'poster': null,\n      'always-play': false,\n      'volume': 1,\n      'no-cookie': true,\n      'force-on-low-battery': false,\n      'lazyloading': false\n    };\n\n    this.params = this.parseProperties(params, DEFAULTS, this.element, ['data-ytbg-', 'data-vbg-']);\n\n    //pause deprecated\n    if (this.params.pause) {\n      this.params['play-button'] = this.params.pause;\n    }\n\n    this.params.resolution_mod = parseResolutionString(this.params.resolution);\n    this.playing = this.params.autoplay;\n    this.muted = this.params.muted;\n\n    this.volume = this.params.volume;\n\n    this.currentTime = this.params['start-at'] || 0;\n    this.duration = this.params['end-at'] || 0;\n    this.percentComplete = 0;\n    if (this.params['start-at']) this.percentComplete = this.timeToPercentage(this.params['start-at']);\n\n    this.buildWrapperHTML();\n\n    if (this.is_mobile && !this.params.mobile) return;\n\n    if (this.params['play-button']) {\n      generateActionButton(this, {\n        name: 'playing',\n        className: 'play-toggle',\n        innerHtml: '<i class=\"fa\"></i>',\n        initialState: !this.playing,\n        stateClassName: 'paused',\n        condition_parameter: 'autoplay',\n        stateChildClassNames: ['fa-pause-circle', 'fa-play-circle'],\n        actions: ['play', 'pause']\n      });\n    }\n\n    if (this.params['mute-button']) {\n      generateActionButton(this, {\n        name: 'muted',\n        className: 'mute-toggle',\n        innerHtml: '<i class=\"fa\"></i>',\n        initialState: this.muted,\n        stateClassName: 'muted',\n        condition_parameter: 'muted',\n        stateChildClassNames: ['fa-volume-up', 'fa-volume-mute'],\n        actions: ['unmute', 'mute']\n      });\n    }\n  }\n\n  timeToPercentage(time) {\n    if (time <= this.params['start-at']) return 0;\n    if (time >= this.duration) return 100;\n    if (time <= 0) return 0;\n    time -= this.params['start-at']; // normalize\n    const duration = this.duration - this.params['start-at']; // normalize\n    return percentage(time, duration);\n  }\n\n  percentageToTime(percentage) {\n    if (!this.duration) return 0;\n    if (percentage > 100) return this.duration;\n    if (percentage < 0) return 0;\n    const duration = this.duration - this.params['start-at']; // normalize\n    let time = percentage * duration / 100;\n    if (this.params['start-at']) time += this.params['start-at']; // normalize\n    return time;\n  }\n\n  resize(element) {\n    if (!this.params['fit-box']) proportionalParentCoverResize(element || this.playerElement, this.params.resolution_mod, this.params.offset);\n    this.dispatchEvent('video-background-resize');\n  }\n\n  stylePlayerElement(element) {\n    if (!element) return;\n\n    if (this.params['inline-styles']) {\n      element.style.top = '50%';\n      element.style.left = '50%';\n      element.style.transform = 'translateX(-50%) translateY(-50%)';\n      element.style.position = 'absolute';\n      element.style.opacity = 0;\n    }\n\n    if (this.params['fit-box']) {\n      element.style.width = '100%';\n      element.style.height = '100%';\n    }\n  }\n\n  buildWrapperHTML() {\n    const parent = this.element.parentNode;\n    // wrap\n    this.element.classList.add('youtube-background', 'video-background');\n  \n    //set css rules\n    const wrapper_styles = {\n      \"height\" : \"100%\",\n      \"width\" : \"100%\",\n      \"z-index\": \"0\",\n      \"position\": \"absolute\",\n      \"overflow\": \"hidden\",\n      \"top\": 0, // added by @insad\n      \"left\": 0,\n      \"bottom\": 0,\n      \"right\": 0\n    };\n  \n    if (!this.params['mute-button']) {\n      wrapper_styles[\"pointer-events\"] = \"none\" // avoid right mouse click popup menu\n    }\n  \n    if (this.params['load-background'] || this.params['poster']) {\n      this.loadBackground(this.id);\n      if (this.params['poster']) wrapper_styles['background-image'] = this.params['poster'];\n      wrapper_styles['background-size'] = 'cover';\n      wrapper_styles['background-repeat'] = 'no-repeat';\n      wrapper_styles['background-position'] = 'center';\n    }\n  \n    if (this.params['inline-styles']) {\n      for (let property in wrapper_styles) {\n        this.element.style[property] = wrapper_styles[property];\n      }\n  \n      if (!['absolute', 'fixed', 'relative', 'sticky'].indexOf(parent.style.position)) {\n        parent.style.position = 'relative';\n      }\n    }\n  \n    // set play/mute controls wrap\n    if (this.params['play-button'] || this.params['mute-button']) {\n      const controls = document.createElement('div');\n      controls.className = 'video-background-controls';\n  \n      controls.style.position = 'absolute';\n      controls.style.top = '10px';\n      controls.style.right = '10px';\n      controls.style['z-index'] = 2;\n  \n      this.controls_element = controls;\n      parent.appendChild(controls);\n    }\n  \n    return this.element;\n  }\n\n  loadBackground(id) {\n    if (!this.params['load-background']);\n    if (!id) return;\n    if (this.type === 'youtube') this.element.style['background-image'] = `url(https://img.youtube.com/vi/${id}/hqdefault.jpg)`;\n    if (this.type === 'vimeo') this.element.style['background-image'] = `url(https://vumbnail.com/${id}.jpg)`;\n  }\n\n  destroy() {\n    this.playerElement.remove();\n    this.element.classList.remove('youtube-background', 'video-background');\n    this.element.removeAttribute('data-vbg-uid');\n    this.element.style = '';\n\n    if (this.params['play-button'] || this.params['mute-button']) {\n      this.controls_element.remove();\n    }\n\n    if (this.timeUpdateTimer) clearInterval(this.timeUpdateTimer);\n    this.dispatchEvent('video-background-destroyed');\n  }\n\n  setDuration(duration) {\n    if (this.duration === duration) return;\n\n    if (this.params['end-at']) {\n      if (duration > this.params['end-at']) {\n        this.duration = this.params['end-at'];\n        return;\n      }\n      if (duration < this.params['end-at']) {\n        this.duration = duration;\n        return;\n      }\n    } else {\n      this.duration = duration;\n      return;\n    }\n\n    if (duration <= 0) this.duration = this.params['end-at'];\n  }\n\n  setStartAt(startAt) {\n    this.params['start-at'] = startAt;\n  }\n\n  setEndAt(endAt) {\n    this.params['end-at'] = endAt;\n    if (this.duration > endAt) this.duration = endAt;\n    if (this.currentTime > endAt) this.onVideoEnded();\n  }\n\n  dispatchEvent(name) {\n    this.element.dispatchEvent(new CustomEvent(name, { bubbles: true, detail: this }));\n  }\n\n  mobileLowBatteryAutoplayHack() {\n    if (!this.params['force-on-low-battery']) return;\n    if (!this.is_mobile && this.params.mobile) return;\n    document.addEventListener('touchstart', () => {\n      if (!this.initialPlay && this.params.autoplay && this.params.muted) {\n        this.softPlay();\n\n        if (!this.isIntersecting && !this.params['always-play']) {\n          this.softPause();\n        }\n      }\n    }, { once: true });\n  }\n\n  parseProperties(params, defaults, element, attr_prefix) {\n    let res_params = {};\n  \n    if (!params) {\n      res_params = defaults;\n    } else {\n      for (let k in defaults) {\n        //load in defaults if the param hasn't been set\n        res_params[k] = !params.hasOwnProperty(k) ? defaults[k] : params[k];\n      }\n    }\n  \n    if (!element) return res_params;\n    // load params from data attributes\n    for (let k in res_params) {\n      let data;\n  \n      if (isArray(attr_prefix)) {\n        for (let i = 0; i < attr_prefix.length; i++) {\n          const temp_data = element.getAttribute(attr_prefix[i]+k);\n          if (temp_data) {\n            data = temp_data;\n            break;\n          }\n        }\n      } else {\n        data = element.getAttribute(attr_prefix+k);\n      }\n  \n      if (data !== undefined && data !== null) {\n        res_params[k] = stringToType(data);\n      }\n    }\n  \n    return res_params;\n  }\n}\n","import { SuperVideoBackground } from './super-video-background.js';\nimport { RE_YOUTUBE } from 'book-of-spells';\n\nexport class YoutubeBackground extends SuperVideoBackground {\n  constructor(elem, params, id, uid) {\n    super(elem, params, id, uid, 'youtube');\n\n    if (!id) return;\n    if (this.is_mobile && !this.params.mobile) return;\n    this.injectScript();\n\n    this.player = null;\n\n    this.injectPlayer();\n\n    this.STATES = {\n      '-1': 'notstarted',\n      '0': 'ended',\n      '1': 'playing',\n      '2': 'paused',\n      '3': 'buffering',\n      '5': 'cued'\n    };\n\n    this.timeUpdateTimer = null;\n    this.timeUpdateInterval = 250;\n\n    this.initYTPlayer();\n  }\n\n  startTimeUpdateTimer() {\n    if (this.timeUpdateTimer) return;\n    this.timeUpdateTimer = setInterval(this.onVideoTimeUpdate.bind(this), this.timeUpdateInterval);\n  };\n\n  stopTimeUpdateTimer() {\n    clearInterval(this.timeUpdateTimer);\n    this.timeUpdateTimer = null;\n  };\n\n  convertState(state) {\n    return this.STATES[state];\n  }\n\n  initYTPlayer() {\n    if (!window.hasOwnProperty('YT') || this.player !== null) return;\n\n    this.player = new YT.Player(this.uid, {\n      events: {\n        'onReady': this.onVideoPlayerReady.bind(this),\n        'onStateChange': this.onVideoStateChange.bind(this)\n      }\n    });\n\n    if (this.volume !== 1 && !this.muted) this.setVolume(this.volume);\n  }\n\n  injectScript() {\n    if (window.hasOwnProperty('YT') || document.querySelector('script[src=\"https://www.youtube.com/player_api\"]')) return\n    const tag = document.createElement('script');\n    tag.src = \"https://www.youtube.com/player_api\";\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n\n  generatePlayerElement() {\n    const playerElement = document.createElement('iframe');\n    playerElement.setAttribute('frameborder', 0);\n    playerElement.setAttribute('allow', 'autoplay; mute');\n    if (this.params['lazyloading']) playerElement.setAttribute('loading', 'lazy');\n\n    return playerElement;\n  }\n\n  generateSrcURL(id) {\n    let site = 'https://www.youtube.com/embed/';\n    if (this.params['no-cookie']) {\n      site = 'https://www.youtube-nocookie.com/embed/';\n    }\n    let src = `${site}${id}?&enablejsapi=1&disablekb=1&controls=0&rel=0&iv_load_policy=3&cc_load_policy=0&playsinline=1&showinfo=0&modestbranding=1&fs=0`;\n\n    if (this.params.muted) {\n      src += '&mute=1';\n    }\n  \n    if (this.params.autoplay && (this.params['always-play'] || this.isIntersecting)) {\n      src += '&autoplay=1';\n    }\n  \n    if (this.params.loop) {\n      src += '&loop=1';\n    }\n\n    return src;\n  }\n\n  injectPlayer() {\n    this.playerElement = this.generatePlayerElement();\n    this.src = this.generateSrcURL(this.id);\n    this.playerElement.src = this.src;\n    this.playerElement.id = this.uid;\n\n    this.stylePlayerElement(this.playerElement);\n    this.element.appendChild(this.playerElement);\n    this.resize(this.playerElement);\n  }\n\n  /* ===== API ===== */\n\n  setSource(url) {\n    const pts = url.match(RE_YOUTUBE);\n    if (!pts || !pts.length) return;\n\n    this.id = pts[1];\n    this.src = this.generateSrcURL(this.id);\n    this.playerElement.src = this.src;\n\n    if (this.element.hasAttribute('data-vbg')) this.element.setAttribute('data-vbg', this.src);\n    if (this.element.hasAttribute('data-ytbg')) this.element.setAttribute('data-ytbg', this.src);\n    this.loadBackground(this.id);\n  }\n\n  onVideoTimeUpdate() {\n    const ctime = this.player.getCurrentTime();\n    if (ctime === this.currentTime) return;\n    this.currentTime = ctime;\n    this.percentComplete = this.timeToPercentage(this.currentTime);\n    if (this.duration && this.currentTime >= this.duration) {\n      this.currentState = 'ended';\n      this.dispatchEvent('video-background-state-change');\n      this.onVideoEnded();\n    }\n    this.dispatchEvent('video-background-time-update');\n  }\n\n  onVideoPlayerReady() {\n    this.mobileLowBatteryAutoplayHack();\n\n    if (this.params.autoplay && (this.params['always-play'] || this.isIntersecting)) {\n      if (this.params['start-at']) this.seekTo(this.params['start-at']);\n      this.player.playVideo();\n    }\n\n    this.setDuration(this.player.getDuration());\n\n    this.dispatchEvent('video-background-ready');\n  }\n\n  onVideoStateChange(event) {\n    this.currentState = this.convertState(event.data);\n\n    if (this.currentState === 'ended') {\n      this.onVideoEnded();\n    }\n  \n    if (this.currentState === 'notstarted' && this.params.autoplay) {\n      this.seekTo(this.params['start-at']);\n      this.player.playVideo();\n    }\n\n    if (this.currentState === 'playing') {\n      if (!this.initialPlay) {\n        this.initialPlay = true;\n        this.playerElement.style.opacity = 1;\n      }\n      \n      if (!this.duration) {\n        this.setDuration(this.player.getDuration());\n      }\n      this.dispatchEvent('video-background-play');\n      this.startTimeUpdateTimer();\n    } else {\n      this.dispatchEvent('video-background-pause');\n      this.stopTimeUpdateTimer();\n    }\n\n    this.dispatchEvent('video-background-state-change');\n  }\n\n  onVideoEnded() {\n    this.dispatchEvent('video-background-ended');\n\n    if (!this.params.loop) return this.player.pause();\n    this.seekTo(this.params['start-at']);\n    this.player.playVideo();\n  }\n\n  seek(percentage) {\n    this.seekTo(this.percentageToTime(percentage), true);\n  }\n\n  seekTo(seconds, allowSeekAhead = true) {\n    this.player.seekTo(seconds, allowSeekAhead);\n  }\n\n  softPause() {\n    if (!this.playing || !this.player) return;\n    this.player.pauseVideo();\n  }\n\n  softPlay() {\n    if (!this.playing || !this.player) return;\n    this.player.playVideo();\n  }\n\n  play() {\n    if (!this.player) return;\n    this.playing = true;\n  \n    if (this.params['start-at'] && this.player.getCurrentTime() < this.params['start-at'] ) {\n      this.seekTo(this.params['start-at']);\n    }\n    this.player.playVideo();\n  }\n\n  pause() {\n    this.playing = false;\n    this.player.pauseVideo();\n  }\n\n  unmute() {\n    if (!this.player) return;\n    this.muted = false;\n  \n    if (!this.initialVolume) {\n      this.initialVolume = true;\n      this.setVolume(this.params.volume);\n    }\n    this.player.unMute();\n    this.dispatchEvent('video-background-unmute');\n  }\n\n  mute() {\n    if (!this.player) return;\n    this.muted = true;\n  \n    this.player.mute();\n    this.dispatchEvent('video-background-mute');\n  }\n\n  getVolume() {\n    if (!this.player) return;\n    return this.player.getVolume() / 100;\n  }\n\n  setVolume(volume) {\n    if (!this.player) return;\n    this.volume = volume;\n    \n    this.player.setVolume(volume * 100);\n    this.dispatchEvent('video-background-volume-change');\n  }\n}\n ","import { SuperVideoBackground } from './super-video-background.js';\nimport { RE_VIMEO } from 'book-of-spells';\n\nexport class VimeoBackground extends SuperVideoBackground {\n  constructor(elem, params, id, uid) {\n    super(elem, params, id, uid, 'vimeo');\n    if (!id) return;\n    if (this.is_mobile && !this.params.mobile) return;\n    this.injectScript();\n\n    this.player = null;\n\n    this.injectPlayer();\n\n    this.initVimeoPlayer();\n  }\n\n  injectScript() {\n    if (window.hasOwnProperty('Vimeo') || document.querySelector('script[src=\"https://player.vimeo.com/api/player.js\"]')) return;\n    const tag = document.createElement('script');\n    if (window.hasOwnProperty('onVimeoIframeAPIReady') && typeof window.onVimeoIframeAPIReady === 'function') tag.addEventListener('load', () => {\n      window.onVimeoIframeAPIReady();\n    });\n    tag.src = 'https://player.vimeo.com/api/player.js';\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n\n  initVimeoPlayer() {\n    if (!window.hasOwnProperty('Vimeo') || this.player !== null) return;\n    this.player = new Vimeo.Player(this.playerElement);\n  \n    this.player.on('loaded', this.onVideoPlayerReady.bind(this));\n    this.player.on('ended', this.onVideoEnded.bind(this));\n    this.player.on('play', this.onVideoPlay.bind(this));\n    this.player.on('pause', this.onVideoPause.bind(this));\n    this.player.on('bufferstart', this.onVideoBuffering.bind(this));\n    this.player.on('timeupdate', this.onVideoTimeUpdate.bind(this));\n\n    if (this.volume !== 1 && !this.muted) this.setVolume(this.volume);\n  }\n\n  generatePlayerElement() {\n    const playerElement = document.createElement('iframe');\n    playerElement.setAttribute('frameborder', 0);\n    playerElement.setAttribute('allow', 'autoplay; mute');\n    if (this.params['lazyloading']) playerElement.setAttribute('loading', 'lazy');\n\n    return playerElement;\n  }\n\n  generateSrcURL(id) {\n    let src = 'https://player.vimeo.com/video/'+id+'?background=1&controls=0';\n  \n    if (this.params.muted) {\n      src += '&muted=1';\n    }\n  \n    if (this.params.autoplay && (this.params['always-play'] || this.isIntersecting)) {\n      src += '&autoplay=1';\n    }\n  \n    if (this.params.loop) {\n      src += '&loop=1&autopause=0';\n    }\n  \n    if (this.params['no-cookie']) {\n      src += '&dnt=1';\n    }\n  \n    //WARN❗️: this is a hash not a query param\n    if (this.params['start-at']) {\n      src += '#t=' + this.params['start-at'] + 's';\n    }\n\n    return src;\n  }\n\n  injectPlayer() {\n    this.playerElement = this.generatePlayerElement();\n    this.src = this.generateSrcURL(this.id);\n    this.playerElement.src = this.src;\n    this.playerElement.id = this.uid;\n    \n    this.stylePlayerElement(this.playerElement);\n    this.element.appendChild(this.playerElement);\n    this.resize(this.playerElement);\n  }\n\n  updateState(state) {\n    this.currentState = state;\n    this.dispatchEvent('video-background-state-change');\n  }\n\n  /* ===== API ===== */\n\n  setSource(url) {\n    const pts = url.match(RE_VIMEO);\n    if (!pts || !pts.length) return;\n\n    this.id = pts[1];\n    this.src = this.generateSrcURL(this.id);\n    this.playerElement.src = this.src;\n\n    if (this.element.hasAttribute('data-vbg')) this.element.setAttribute('data-vbg', this.src);\n    if (this.element.hasAttribute('data-ytbg')) this.element.setAttribute('data-ytbg', this.src);\n    this.loadBackground(this.id);\n  }\n\n  onVideoPlayerReady() {\n    this.mobileLowBatteryAutoplayHack();\n\n    if (this.params['start-at']) this.seekTo(this.params['start-at']);\n\n    if (this.params.autoplay && (this.params['always-play'] || this.isIntersecting)) {\n      this.player.play();\n    }\n\n    this.player.getDuration().then((duration) => {\n      this.setDuration(duration);\n    });\n\n    this.dispatchEvent('video-background-ready');\n  }\n\n  onVideoEnded() {\n    this.updateState('ended');\n    this.dispatchEvent('video-background-ended');\n    if (!this.params.loop) return this.pause();\n    \n    this.seekTo(this.params['start-at']);\n    this.updateState('playing');\n    this.dispatchEvent('video-background-play');\n  }\n\n  onVideoTimeUpdate(event) {\n    this.currentTime = event.seconds;\n    this.percentComplete = this.timeToPercentage(event.seconds);\n    this.dispatchEvent('video-background-time-update');\n\n    if (this.duration && event.seconds >= this.duration) {\n      this.onVideoEnded();\n    }\n  }\n\n  onVideoBuffering() {\n    this.updateState('buffering');\n  }\n\n  onVideoPlay(event) {\n    if (!this.initialPlay) {\n      this.initialPlay = true;\n      this.playerElement.style.opacity = 1;\n    }\n\n    this.setDuration(event.duration);\n\n    const seconds = event.seconds;\n    if (self.params['start-at'] && seconds < self.params['start-at']) {\n      self.seekTo(self.params['start-at']);\n    }\n\n    if (self.duration && seconds >= self.duration) {\n      self.seekTo(self.params['start-at']);\n    }\n\n    this.updateState('playing');\n    this.dispatchEvent('video-background-play');\n  }\n\n  onVideoPause() {\n    this.updateState('paused');\n    this.dispatchEvent('video-background-pause');\n  }\n\n  seek(percentage) {\n    this.seekTo(this.percentageToTime(percentage));\n  }\n\n  seekTo(time) {\n    this.player.setCurrentTime(time);\n  }\n\n  softPause() {\n    if (!this.playing || !this.player) return;\n    this.player.pause();\n  }\n\n  softPlay() {\n    if (!this.playing || !this.player) return;\n    this.player.play();\n  }\n\n  play() {\n    if (!this.player) return;\n    this.playing = true;\n    \n    this.player.play();\n  }\n\n  pause() {\n    if (!this.player) return;\n    this.playing = false;\n  \n    this.player.pause();\n  }\n\n  unmute() {\n    if (!this.player) return;\n    this.muted = false;\n  \n    if (!this.initialVolume) {\n      this.initialVolume = true;\n      this.setVolume(this.params.volume);\n    }\n    this.player.setMuted(false);\n    this.dispatchEvent('video-background-unmute');\n  }\n\n  mute() {\n    if (!this.player) return;\n    this.muted = true;\n  \n    this.player.setMuted(true);\n    this.dispatchEvent('video-background-mute');\n  }\n\n  getVolume() {\n    if (!this.player) return;\n    return this.player.getVolume();\n  }\n\n  setVolume(volume) {\n    if (!this.player) return;\n    this.volume = volume;\n  \n    this.player.setVolume(volume);\n    this.dispatchEvent('video-background-volume-change');\n  }\n}\n","import { SuperVideoBackground } from './super-video-background.js';\nimport { RE_VIDEO } from 'book-of-spells';\n\nexport class VideoBackground extends SuperVideoBackground {\n  constructor(elem, params, vid_data, uid) {\n    super(elem, params, vid_data.link, uid, 'video');\n    if (!vid_data || !vid_data.link) return;\n    if (this.is_mobile && !this.params.mobile) return;\n\n    this.src = vid_data.link;\n    this.ext = /(?:\\.([^.]+))?$/.exec(vid_data.id)[1];\n    this.uid = uid;\n    this.element.setAttribute('data-vbg-uid', uid);\n    this.player = null;\n    this.buttons = {};\n\n    this.MIME_MAP = {\n      'ogv' : 'video/ogg',\n      'ogm' : 'video/ogg',\n      'ogg' : 'video/ogg',\n      'avi' : 'video/avi',\n      'mp4' : 'video/mp4',\n      'webm' : 'video/webm'\n    };\n\n    this.mime = this.MIME_MAP[this.ext.toLowerCase()];\n\n    this.injectPlayer();\n\n    this.mobileLowBatteryAutoplayHack();\n    this.dispatchEvent('video-background-ready');\n  }\n\n  generatePlayerElement() {\n    const playerElement = document.createElement('video');\n    playerElement.setAttribute('playsinline', '');\n    if (this.params.loop) playerElement.setAttribute('loop', '');\n    if (this.params.autoplay && (this.params['always-play'] || this.isIntersecting)) playerElement.setAttribute('autoplay', '');\n    if (this.muted) playerElement.setAttribute('muted', '');\n    if (this.params['lazyloading']) playerElement.setAttribute('loading', 'lazy');\n\n    return playerElement;\n  }\n\n  injectPlayer() {\n    this.player = this.generatePlayerElement();\n    this.playerElement = this.player;\n    \n    if (this.volume !== 1 && !this.muted) this.setVolume(this.volume);\n  \n    this.playerElement.setAttribute('id', this.uid)\n    \n    this.stylePlayerElement(this.playerElement);\n\n    this.player.addEventListener('loadedmetadata', this.onVideoLoadedMetadata.bind(this));\n    this.player.addEventListener('durationchange', this.onVideoLoadedMetadata.bind(this));\n    this.player.addEventListener('canplay', this.onVideoCanPlay.bind(this));\n    this.player.addEventListener('timeupdate', this.onVideoTimeUpdate.bind(this));\n    this.player.addEventListener('play', this.onVideoPlay.bind(this));\n    this.player.addEventListener('pause', this.onVideoPause.bind(this));\n    this.player.addEventListener('waiting', this.onVideoBuffering.bind(this));\n    this.player.addEventListener('ended', this.onVideoEnded.bind(this));\n\n    this.element.appendChild(this.playerElement);\n    const source = document.createElement('source');\n    source.setAttribute('src', this.src);\n    source.setAttribute('type', this.mime);\n    this.playerElement.appendChild(source);\n    this.resize(this.playerElement);\n  }\n\n  updateState(state) {\n    this.currentState = state;\n    this.dispatchEvent('video-background-state-change');\n  }\n\n  /* ===== API ===== */\n\n  setSource(url) {\n    const pts = url.match(RE_VIDEO);\n    if (!pts || !pts.length) return;\n    this.id = pts[1];\n    this.ext = /(?:\\.([^.]+))?$/.exec(this.id)[1];\n    this.mime = this.MIME_MAP[this.ext.toLowerCase()];\n    this.playerElement.innerHTML = '';\n    const source = document.createElement('source');\n    source.setAttribute('src', url);\n    source.setAttribute('type', this.mime);\n    this.playerElement.appendChild(source);\n    this.src = url;\n\n    if (this.element.hasAttribute('data-vbg')) this.element.setAttribute('data-vbg', this.src);\n    if (this.element.hasAttribute('data-ytbg')) this.element.setAttribute('data-ytbg', this.src);\n  }\n\n  onVideoLoadedMetadata() {\n    this.setDuration(this.player.duration);\n  }\n\n  onVideoCanPlay() {\n    this.setDuration(this.player.duration);\n\n    if (this.params['start-at'] && this.params.autoplay) {\n      this.seekTo(this.params['start-at']);\n    }\n  }\n\n  onVideoTimeUpdate() {\n    this.currentTime = this.player.currentTime;\n    this.percentComplete = this.timeToPercentage(this.player.currentTime);\n    this.dispatchEvent('video-background-time-update');\n\n    if (this.currentTime >= this.duration) {\n      this.onVideoEnded();\n    }\n  }\n\n  onVideoPlay() {\n    if (!this.initialPlay) {\n      this.initialPlay = true;\n      this.playerElement.style.opacity = 1;\n    }\n\n    this.updateState('playing');\n    this.dispatchEvent('video-background-play');\n  }\n\n  onVideoPause() {\n    this.updateState('paused');\n    this.dispatchEvent('video-background-pause');\n  }\n\n  onVideoEnded() {\n    this.updateState('ended');\n    this.dispatchEvent('video-background-ended');\n    if (!this.params.loop) return this.pause();\n      \n    this.seekTo(this.params['start-at']);\n    this.onVideoPlay();\n  }\n\n  onVideoBuffering() {\n    this.updateState('buffering');\n  }\n\n  seek(percentage) {\n    this.seekTo(this.percentageToTime(percentage));\n  }\n\n  seekTo(seconds) {\n    if (this.player.hasOwnProperty('fastSeek')) {\n      this.player.fastSeek(seconds);\n      return;\n    }\n    this.player.currentTime = seconds;\n  }\n\n  softPause() {\n    if (!this.playing || !this.player) return;\n    this.player.pause();\n  }\n\n  softPlay() {\n    if (!this.playing || !this.player) return;\n    this.player.play();\n  }\n\n  play() {\n    if (!this.player) return;\n  \n    const seconds = this.player.currentTime;\n    \n    if (this.params['start-at'] && seconds <= this.params['start-at']) {\n      this.seekTo(this.params['start-at']);\n    }\n\n    if (this.duration && seconds >= this.duration) {\n      this.seekTo(this.params['start-at']);\n    }\n  \n    this.playing = true;\n  \n    this.player.play();\n  }\n\n  pause() {\n    if (!this.player) return;\n    this.playing = false;\n  \n    this.player.pause();\n  }\n\n  unmute() {\n    if (!this.player) return;\n    this.muted = false;\n  \n    this.player.muted = false;\n    if (!this.initialVolume) {\n      this.initialVolume = true;\n      this.setVolume(this.params.volume);\n    }\n    this.dispatchEvent('video-background-unmute');\n  }\n\n  mute() {\n    if (!this.player) return;\n    this.muted = true;\n  \n    this.player.muted = true;\n    this.dispatchEvent('video-background-mute');\n  }\n\n  getVolume() {\n    if (!this.player) return;\n    return this.player.volume;\n  }\n\n  setVolume(volume) {\n    if (!this.player) return;\n    this.volume = volume;\n  \n    this.player.volume = volume;\n    this.dispatchEvent('video-background-volume-change');\n  }\n}\n","import { YoutubeBackground } from './lib/youtube-background.js';\nimport { VimeoBackground } from './lib/vimeo-background.js';\nimport { VideoBackground } from './lib/video-background.js';\n\nimport { randomIntInclusive, RE_VIMEO, RE_YOUTUBE, RE_VIDEO } from 'book-of-spells';\n\nexport class VideoBackgrounds {\n  constructor(selector, params) {\n    this.elements = selector;\n    if (this.elements instanceof Element) this.elements = [this.elements];\n    if (typeof this.elements === 'string') this.elements = document.querySelectorAll(selector);\n\n    this.index = {};\n\n    const self = this;\n\n    this.intersectionObserver = null;\n\n    if ('IntersectionObserver' in window) {\n      this.intersectionObserver = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          const uid = entry.target.getAttribute('data-vbg-uid');\n  \n          if (uid && self.index.hasOwnProperty(uid) && entry.isIntersecting) {\n            self.index[uid].isIntersecting = true;\n            try {\n              if (self.index[uid].player && self.index[uid].params.autoplay) self.index[uid].softPlay();\n            } catch (e) {\n              // console.log(e);\n            }\n          } else {\n            self.index[uid].isIntersecting = false;\n            try {\n              if (self.index[uid].player) self.index[uid].softPause();\n            } catch (e) {\n              // console.log(e);\n            }\n          }\n        });\n      });\n    }\n\n    this.resizeObserver = null;\n\n    if ('ResizeObserver' in window) {\n      this.resizeObserver = new ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          const uid = entry.target.getAttribute('data-vbg-uid');\n\n          if (uid && self.index.hasOwnProperty(uid)) {\n            window.requestAnimationFrame(() => self.index[uid].resize());\n          }\n        });\n      });\n    } else {\n      window.addEventListener('resize', function () {\n        for (let k in self.index) {\n          window.requestAnimationFrame(() => self.index[k].resize(self.index[k].playerElement));\n        }\n      });\n    }\n    \n    this.initPlayers();\n\n    if (!this.elements || !this.elements.length) return;\n    for (let i = 0; i < this.elements.length; i++) {\n      const element = this.elements[i];\n      this.add(element, params);\n    }\n  }\n\n  add(element, params) {\n    if (!element) return;\n    if (element.hasAttribute('data-vbg-uid')) return;\n\n    if (!this.intersectionObserver) {\n      if (!params) params = {};\n      params['always-play'] = true;\n    }\n\n    const link = element.getAttribute('data-youtube') || element.getAttribute('data-vbg');\n    const vid_data = this.getVidID(link);\n  \n    if (!vid_data) return;\n    \n    const uid = this.generateUID(vid_data.id);\n  \n    if (!uid) return;\n  \n    switch (vid_data.type) {\n      case 'YOUTUBE':\n        const yb = new YoutubeBackground(element, params, vid_data.id, uid);\n        this.index[uid] = yb;\n        break;\n      case 'VIMEO':\n        const vm = new VimeoBackground(element, params, vid_data.id, uid);\n        this.index[uid] = vm;\n        break;\n      case 'VIDEO':\n        const vid = new VideoBackground(element, params, vid_data, uid);\n        this.index[uid] = vid;\n        break;\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(element);\n    }\n  \n    if (!this.index[uid].params['always-play'] && this.intersectionObserver) {\n      this.intersectionObserver.observe(element);\n    }\n  }\n\n  destroy(element) {\n    const uid = element.uid || element.getAttribute('data-vbg-uid');\n    if (uid && this.index.hasOwnProperty(uid)) {\n      if (!this.index[uid].params['always-play'] && this.intersectionObserver) this.intersectionObserver.unobserve(element);\n      if (this.resizeObserver) this.resizeObserver.unobserve(element);\n      this.index[uid].destroy();\n      delete this.index[uid];\n    }\n  }\n\n  destroyAll() {\n    for (let k in this.index) {\n      this.destroy(this.index[k].playerElement);\n    }\n  }\n\n  getVidID(link) {\n    if (link === undefined && link === null) return;\n\n    this.re = {};\n    this.re.YOUTUBE = RE_YOUTUBE;\n    this.re.VIMEO = RE_VIMEO;\n    this.re.VIDEO = RE_VIDEO;\n    \n    for (let k in this.re) {\n      const pts = link.match(this.re[k]);\n\n      if (pts && pts.length) {\n        this.re[k].lastIndex = 0;\n        return {\n          id: pts[1],\n          type: k,\n          regex_pts: pts,\n          link: link\n        };\n      }\n    }\n  \n    return;\n  }\n\n  generateUID(pref) {\n    //index the instance\n    pref = pref.replace(/[^a-zA-Z0-9\\-_]/g, '-'); //sanitize id\n    pref = pref.replace(/-{2,}/g, '-'); //remove double dashes\n    pref = pref.replace(/^-+/, '').replace(/-+$/, ''); //trim dashes\n    pref = 'vbg-'+ pref; //prefix id with 'vbg-\n\n    let uid = pref +'-'+ randomIntInclusive(0, 9999);\n    while (this.index.hasOwnProperty(uid)) {\n      uid = pref +'-'+ randomIntInclusive(0, 9999);\n    }\n  \n    return uid;\n  }\n\n  get(element) {\n    const uid = typeof element === 'string' ? element : element.getAttribute('data-vbg-uid');\n    if (uid && this.index.hasOwnProperty(uid)) return this.index[uid];\n  }\n\n  pauseAll() {\n    for (let k in this.index) {\n      this.index[k].pause();\n    }\n  }\n\n  playAll() {\n    for (let k in this.index) {\n      this.index[k].play();\n    }\n  }\n\n  muteAll() {\n    for (let k in this.index) {\n      this.index[k].mute();\n    }\n  }\n\n  unmuteAll() {\n    for (let k in this.index) {\n      this.index[k].unmute();\n    }\n  }\n\n  setVolumeAll(volume) {\n    for (let k in this.index) {\n      this.index[k].setVolume(volume);\n    }\n  }\n\n  initPlayers(callback) {\n    const self = this;\n  \n    window.onYouTubeIframeAPIReady = function () {\n      for (let k in self.index) {\n        if (self.index[k] instanceof YoutubeBackground) {\n          self.index[k].initYTPlayer();\n        }\n      }\n  \n      if (callback) {\n        setTimeout(callback, 100);\n      }\n    };\n  \n    if (window.hasOwnProperty('YT') && window.YT.loaded) {\n      window.onYouTubeIframeAPIReady();\n    }\n  \n    window.onVimeoIframeAPIReady = function () {\n      for (let k in self.index) {\n        if (self.index[k] instanceof VimeoBackground) {\n          self.index[k].initVimeoPlayer();\n        }\n      }\n  \n      if (callback) {\n        setTimeout(callback, 100);\n      }\n    }\n  \n    if (window.hasOwnProperty('Vimeo') && window.Vimeo.hasOwnProperty('Player')) {\n      window.onVimeoIframeAPIReady();\n    }\n  }\n}\n","import { VideoBackgrounds } from './video-backgrounds.js';\n\nif (typeof jQuery == 'function') {\n  (function ($) {\n    $.fn.youtube_background = function (params) {\n      const $this = $(this);\n      if (window.hasOwnProperty('VIDEO_BACKGROUNDS')) {\n        window.VIDEO_BACKGROUNDS.add($this, params);\n        return $this;\n      }\n      window.VIDEO_BACKGROUNDS = new VideoBackgrounds(this, params);\n      return $this;\n    };\n  })(jQuery);\n}\n\nwindow.VideoBackgrounds = VideoBackgrounds;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}